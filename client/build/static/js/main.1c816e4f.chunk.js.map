{"version":3,"sources":["serviceWorker.js","Functions/AppBar/profile.tsx","Functions/AppBar/temporary-drawer.tsx","Functions/AppBar/app-bar.tsx","components/page-block.tsx","Pages/not-found.tsx","Pages/loading.tsx","Shared/utility-service.ts","Shared/auth-service.ts","Auth/private-route.tsx","Pages/home.tsx","Pages/my-profile.tsx","Functions/Table/table.tsx","Pages/admin.tsx","Shared/arbitrage-service.ts","ClientBrain/Arbitrage/Models/v2/enum/BetDuration.ts","ClientBrain/Arbitrage/Models/v2/enum/BetFactorTypeEnum.ts","ClientBrain/Arbitrage/Models/v2/enum/BetTypeEnum.ts","Functions/GameCard/gamecard.tsx","Functions/PopOver/popover.tsx","ClientBrain/Arbitrage/Models/v2/Book.ts","ClientBrain/Arbitrage/book-manager.ts","ClientBrain/Arbitrage/Models/v2/enum/PlayerPropTypeEnum.ts","ClientBrain/Arbitrage/Models/v2/Factor.ts","ClientBrain/Arbitrage/Models/v2/BetFactor.ts","ClientBrain/Arbitrage/Models/v2/Participant.ts","ClientBrain/Arbitrage/Models/v2/enum/SportEnum.ts","ClientBrain/Arbitrage/Models/v2/BookBet.ts","ClientBrain/Arbitrage/Models/v2/BookEvent.ts","ClientBrain/Arbitrage/Models/v2/BettingEvent.ts","ClientBrain/Arbitrage/action-network-brain-v2.ts","ClientBrain/Arbitrage/Models/game.js","ClientBrain/Arbitrage/Models/odd.js","ClientBrain/Arbitrage/BookBrains/bet-online-brain.js","ClientBrain/Arbitrage/BookBrains/pinnacle-brain.ts","ClientBrain/Arbitrage/Models/v2/BetChoice.ts","ClientBrain/Arbitrage/Models/v2/BetChoiceFactors.ts","ClientBrain/Arbitrage/Models/v2/FactorTypeSummary.ts","ClientBrain/Arbitrage/BetChoiceManager.ts","Pages/arbitrage.tsx","Shared/browser-history.ts","Pages/login-callback.tsx","App.tsx","Shared/theme.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","Profile","props","user","App","app","userHasRole","ListItem","button","onClick","goToProfile","ListItemIcon","Avatar","src","picture","ListItemText","name","HeaderDiv","styled","theme","width","StyledIcon","color","StyledIconButton","IconButton","useStyles","makeStyles","drawer","drawerPaper","backgroundColor","Login","useAuth0","loginWithRedirect","logout","l","clearUserCache","returnTo","origin","sx","TemporaryDrawer","side","classes","React","useState","top","left","bottom","right","drawerLocation","state","setState","toggleDrawer","open","route","event","type","key","changeRoute","history","push","edge","aria-label","Drawer","anchor","onClose","paper","role","List","Divider","menuList","map","item","index","onKeyDown","primary","display","sideBarItems","StyledTyp","Typography","palette","paddingLeft","MyAppBar","items","getUser","className","AppBar","position","Toolbar","this","variant","nextProps","prevState","o","filter","i","length","s","Component","LightFillBlock","dark","two","minHeight","flexDirection","alignItems","justifyContent","fontSize","DarkFillBlock","one","NotWideDiv","height","PageBlock","fill","children","NotFoundPage","title","LoadingPage","style","textAlign","CircularProgress","size","fetch","require","UtilityService","get","options","a","then","res","json","catch","post","body","headers","user_id","method","JSON","stringify","AuthService","validate","userId","userContextGet","getAllAppRoles","getAppUsers","updateUserRoles","roleList","removeInd","roles","PrivateRoute","page","Loading","userAccess","r","component","NotFound","e","P","HomePage","MyProfilePage","descendingComparator","b","orderBy","getHeadCells","headCells","id","numeric","disablePadding","label","checkbox","disabled","description","rowDetail","EnhancedTableHead","order","onRequestSort","TableHead","TableRow","headCell","TableCell","align","padding","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","root","spacing","paddingRight","highlight","secondary","main","lighten","light","text","flex","EnhancedTableToolbar","numSelected","clsx","Tooltip","marginBottom","table","minWidth","border","clip","margin","overflow","EnhancedTable","setOrder","setOrderBy","selected","setPage","rowsPerPage","setRowsPerPage","users","setUsers","createRow","row","email","hasNone","none","rows","d","u","buildData","emptyRows","Math","min","Paper","TableContainer","Table","aria-labelledby","rowCount","TableBody","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","slice","hover","tabIndex","c","Checkbox","checked","roleId","adminPage","Object","assign","updateUsers","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","target","value","AdminPage","appUsers","appRoles","dictionaries","Promise","all","values","toRemove","console","log","updateMyRoles","ArbitrageService","getAllBooks","getAllOddsForDate","selectedBooks","undefined","Date","dateString","getFullYear","toString","getMonth","padStart","getDate","join","getAtionLabsBookOdds","bookId","getActionLabsPlayers","getActionLabsPropEvents","getActionLabsMarketEvents","getPinnacleMatchUps","sportId","getPinnacleMarkets","getBetOnlineOdds","sport","getBovadaOdds","updateMyBooks","myBooks","BetDuration","BetFactorTypeEnum","BetTypeEnum","BestTypography","Item","three","typography","body2","verticalAlign","TeamItem","GameCard","Grid","container","mt","xs","betChoice","BetParticipants","find","p","Id","Name","BetType","Line","houseLine","round","getNetEV","HouseLine","Evs","evLabel","evSummary","BestEV","Value","PickLabel","Choices","Label","BookId","factorList","isUS","factor","Book","AmericanOdds","DecimalOdds","Best","getFactorLabelByBook","Factors","StyledButton","Button","StyledFCL","FormControlLabel","BasicPopover","anchorEl","setAnchorEl","isChecked","includes","aria-describedby","currentTarget","Popover","anchorOrigin","vertical","horizontal","FormGroup","control","onChange","updateBooks","my","bookName","bookLogo","BookName","BookLogo","defaultSelectedBookIds","BookManager","isLoaded","allBooks","selectedBookIds","user_metadata","arbitrage","getMyLiveBooks","forEach","book","cacheMyBooks","instance","createInstance","PlayerPropTypeEnum","Factor","decimalOdds","americanOdds","EV","BetFactor","Participant","SportEnum","BookBet","gameId","betType","playerPropType","betDuration","line","betFactors","betParticipants","date","GameId","PlayerPropType","BetFactors","JoinLabel","GenerateJoinLabel","getDateString","participant1","participant2","participant3","betFactors1","betFactors2","betFactors3","Over","Under","HeadToHead","PlayerProp","Assists","Game","MostTotalBases","gameDateString","playerPropLabel","NonApplicable","participantsLabel","BookEvent","BookBets","bettingEvent","BettingEvent","LeagueName","Sport","EventParticipants","EventDate","ActionNetworkBrain","bookEventTree","bm","getInstance","getSelectedBookIds","league","game","odds","participants","bookBets","home","away","homeName","awayName","getSport","getGameId","odd","getBookById","mlBetFactors","sBetFactors","ouBetFactors","tthBetFactors","ttaBetFactors","setBetFactor","Home","Away","Draw","mlbb","MoneyLine","getBetDuration","sbb","Spread","oubb","OverUnder","tthbb","TeamTotalHome","ttabb","TeamTotalAway","bookEvent","ml","leagueName","bt","anLabel","anOdd","bf","bft","getDecimialFromAmerican","Basketball","Soccer","Baseball","Hockey","Other","durationString","FirstPeriod","SecondPeriod","FourthPeriod","Odd","mlHome","mlAway","mlDraw","spreadHome","spreadAway","totalOver","totalUnder","lineSpread","lineOverUnder","homeOver","homeUnder","homeLine","awayOver","awayUnder","awayLine","BetOnlineBrain","gameOdds","gameTree","sportsToLoad","loadSport","v","GameOffering","LeagueGroup","leagueGroup","DateGrouping","dateGrouping","ScheduleGroup","scheduleGroup","TimeGrouping","gameTime","Games","g","getOddsFromGame","League","HomeTeam","AwayTeam","GameDate","toLowerCase","HomeLine","AwayLine","DrawLine","SpreadLine","TotalLine","Point","PinnacleBrain","matchups","markets","reqs","bookEvents","marketArray","market","matchupId","keys","matchup","alignment","startTime","isLive","getSportEnumFromPinnacleSportId","createOdds","allBookEvents","sportCalls","sportTrees","st","Array","prototype","apply","prices","designation","over","under","price","period","points","max","BetChoice","betChoiceId","BetChoiceId","PinnacleOdds","RealOdds","BetChoiceFactors","factors","FactorTypeSummary","pickLabel","BetChoiceManager","AllBets","AllEvents","getGameTree","bookGameTrees","loadActionNetworkGameTree","loadPinnacleGameTree","trees","tree","bookBet","loadChoicesForBetChoice","loadPinnacleOddsForBetChoice","calculateBetChoices","existingBetChoice","bcf","newBetChoice","calculateBetChoiceInfo","calculateRealOdds","calculateEVs","pTotal","bestCEV","f","realP","existingEV","fs","mySort","mySort2","Instance","fontWeight","ArbitragePage","allBets","displayBets","betTypeFilter","All","leagueFilter","sortBy","leagueOptions","actionNetWorkBrain","bookManager","betChoiceManager","setBetTypeFilter","bind","updateSortBy","populateGameOdds","setLeagueFilter","loadBooks","getSelectedBooks","populateLeagueOptions","lo","self","indexOf","btf","lf","sb","getGameOddsSortedBy","getDisplayBets","updateBookById","loadBetChoices","FormControl","fullWidth","InputLabel","Select","labelId","MenuItem","TeamTotal","maxWidth","maxHeight","bet","createBrowserHistory","Callback","isLoading","isAuthenticated","LoginCallbackPage","sub","cacheUser","usercontext","sessionStorage","clear","setItem","marginTop","path","MyProfile","Admin","Arbitrage","exact","user_context","parse","createTheme","mode","four","darken","five","h6","components","routing","domain","config","clientId","redirectUri","ThemeProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.1c816e4f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Fragment } from \"react\";\nimport { Avatar, ListItem, ListItemIcon, ListItemText } from '@mui/material';\nimport App from '../../App';\n\ntype Props = {\n  goToProfile: any,\n  app: any\n}\n\nfunction Profile(props: Props){\n  let user = App.user();\n  if(user && props.app.userHasRole('AppUser')){\n    return (\n      <Fragment>\n        <ListItem button onClick={props.goToProfile()}>\n          <ListItemIcon><Avatar src={user.picture}></Avatar></ListItemIcon>\n          <ListItemText>{user.name}</ListItemText>\n        </ListItem>\n      </Fragment>\n    );\n  }else if (user){\n    return (\n      <Fragment>\n        <ListItem>\n          <ListItemIcon><Avatar src={user.picture}></Avatar></ListItemIcon>\n          <ListItemText>{user.name}</ListItemText>\n        </ListItem>\n      </Fragment>\n    );\n  }else{\n    return <div></div>;\n  }\n};\n\nexport default Profile;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Drawer, IconButton, List, ListItem, ListItemIcon, ListItemText, Divider} from '@mui/material';\nimport AddShoppingCartIcon from '@mui/icons-material/AddShoppingCart';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport MailIcon from '@mui/icons-material/Mail';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\n\nimport Profile from './profile';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport App from '../../App';\nimport { styled } from '@mui/material/styles';\n\nconst HeaderDiv = styled('div')(({theme}) => ({\n  width: 250\n}));\n\nconst StyledIcon = styled(ListItemIcon)(({theme}) => ({\n  color: 'white'\n}));\n\nconst StyledIconButton = styled(IconButton)(({theme}) => ({\n  color: 'white'\n}));\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n      },\n      drawerPaper: {\n        backgroundColor: '#000000',\n        color: 'white'\n      },\n}));\n\nfunction Logout(l: any, app: any){\n  app.clearUserCache();\n  l({returnTo: window.location.origin})\n}\n\ntype LoginProps = {\n  app: any\n}\n\nfunction Login(props: LoginProps){\n  const { loginWithRedirect, logout } = useAuth0();\n  if(App.user()){\n    return(\n      <ListItem button onClick={()=> Logout(logout, props.app)}>\n        <ListItemIcon><AccountBoxIcon sx={{ color: \"white\" }}/></ListItemIcon>\n        <ListItemText>Log out</ListItemText>\n      </ListItem>\n    )\n  }\n\n  return(\n    <ListItem button onClick={()=> loginWithRedirect({ returnTo: window.location.origin+'/app' })}>\n      <StyledIcon><AccountBoxIcon sx={{ color: \"white\" }}/></StyledIcon>\n      <ListItemText>Login</ListItemText>\n    </ListItem>\n  )\n}\n\ntype Anchor = 'top' | 'left' | 'bottom' | 'right';\n\ntype Props = {\n  drawerLocation: Anchor,\n  app: any,\n  menuList: any,\n  history: any\n}\n\nexport default function TemporaryDrawer(props: Props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n    drawerLocation: props.drawerLocation\n  });\n\n  const toggleDrawer = (side: Anchor, open: Boolean, route?: string) => (event:any) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    if(!open && route){\n      changeRoute(route, state.drawerLocation)\n    }\n\n    setState({ ...state, [side]: open });\n  };\n\n  const changeRoute = (route: string, side: Anchor) => {\n    setState({ ...state, [side]: false });\n    props.history.push(route);\n  };\n\n  const sideList = (side: Anchor) => (\n    <HeaderDiv\n      role=\"presentation\"\n    >\n      <Profile app={props.app} goToProfile={()=>toggleDrawer(side, false, '/app/profile')}/>\n      <List>\n        <Login app={props.app}/>\n        <Divider />\n          {props.menuList.map((item:any, index:number) => (\n            <ListItem button key={item.route} onClick={toggleDrawer(side, false, item.route)} onKeyDown={toggleDrawer(side, false, item.route)}>\n              <StyledIcon>{index % 2 === 0 ? <InboxIcon sx={{ color: \"white\" }}/> : <MailIcon sx={{ color: \"white\" }}/>}</StyledIcon>\n              <ListItemText primary={item.display} />\n            </ListItem>\n          ))}\n      </List>\n    </HeaderDiv>\n  );\n\n  return (\n    <div>\n  \t  <StyledIconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer(state.drawerLocation, true)}>\n        <MenuIcon sx={{ color: \"white\" }}/>\n      </StyledIconButton>\n      <Drawer anchor={state.drawerLocation} open={state[state.drawerLocation]} onClose={toggleDrawer(state.drawerLocation, false)} classes={{ paper: classes.drawerPaper  }}>\n        {sideList(state.drawerLocation)}\n      </Drawer>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\n//import AppBar from '@material-ui/core/AppBar';\nimport { AppBar, Toolbar, Typography } from '@mui/material';\nimport TemporaryDrawer from './temporary-drawer'\nimport Search from '../Search/search';\nimport App from '../../App';\nimport { styled } from '@mui/material/styles';\n\nlet sideBarItems = [\n\t{display: 'Home', route: '/app'},\n];\n\nconst StyledTyp = styled(Typography)(({theme}:any) => ({\n  color: theme.palette.primary,\n  paddingLeft: '20px'\n}));\n\ntype Props = {\n  user?: any,\n  app?: any,\n  history: any\n}\n\ntype State = {\n  items: any,\n  app: any,\n  user: any\n}\n\nclass MyAppBar extends Component<Props, State>{\n  public state: State = {\n    items: sideBarItems,\n    app: this.props.app,\n    user: this.props.app.getUser()\n  };\n\n\tconstructor(props: Props){\n\t\tsuper(props);\n    if(props.app.userHasRole('AppAdmin')){\n      sideBarItems.push({display: 'Administration', route: '/app/admin'});\n    }\n\n    if(props.app.userHasRole('Arbitrage') || props.app.userHasRole('AppAdmin')){\n      sideBarItems.push({display: 'Arbitrage', route: '/app/arbitrage'});\n    }\n\n    this.state = {\n      items: sideBarItems,\n      app: props.app,\n      user: props.app.getUser()\n    };\n\t}\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State){\n\n    if(prevState.user !== nextProps.user){\n      let o: any = {};\n      if(prevState.app.userHasRole('AppAdmin') && !(prevState.items.filter( (i:any) => i.display === 'Administration').length > 0)){\n        let s = prevState.items\n        s.push({display: 'Administration', route: '/app/admin'});\n        o.items = s;\n      }\n      if(prevState.app.userHasRole('ArbitrageUser') && !(prevState.items.filter( (i:any) => i.display === 'Arbitrage').length > 0)){\n        let s = prevState.items\n        s.push({display: 'Arbitrage', route: '/app/arbitrage'});\n        o.items = s;\n      }\n      o.app = nextProps.app;\n      return o;\n    }else{\n      return null\n    }\n  }\n\n\trender(){\n    return (\n      <div className=\"app-bar\">\n        <AppBar position=\"fixed\" color='primary'>\n          <Toolbar>\n            <TemporaryDrawer drawerLocation='left' menuList={this.state.items} history={this.props.history} app={this.state.app} />\n            <StyledTyp variant=\"h6\" >\n              wittenber0 archives\n            </StyledTyp>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n\t}\n}\n\nexport default MyAppBar;\n","import React, { Component } from 'react';\nimport classNames from 'classnames'\nimport { styled } from '@mui/material/styles';\n\nconst LightFillBlock = styled('div')(({theme}) => ({\n\tbackgroundColor: theme.palette.dark.two,\n\tminHeight: '100vh',\n\tdisplay: 'flex',\n\tflexDirection: 'column',\n\talignItems: 'center',\n\tjustifyContent: 'center',\n\tfontSize: 'calc(10px + 2vmin)',\n\tcolor: 'white',\n}));\n\nconst DarkFillBlock = styled('div')(({theme}) => ({\n\tbackgroundColor: theme.palette.dark.one,\n\tminHeight: '100vh',\n\tdisplay: 'flex',\n\tflexDirection: 'column',\n\talignItems: 'center',\n\tjustifyContent: 'center',\n\tfontSize: 'calc(10px + 2vmin)',\n\tcolor: 'white',\n}));\n\nconst NotWideDiv = styled('div')(({theme}) => ({\n\twidth: '80%',\n\theight: '100%'\n\n}));\n\ntype Props = {\n\tfill: string,\n\tchildren: any\n}\n\nclass PageBlock extends Component<Props>{\n\n\trender(){\n\t\tif(this.props.fill === 'light'){\n\t\t\t\treturn(\n\t\t\t\t\t<LightFillBlock className='lightFillBlock'>\n\t\t\t\t\t\t<NotWideDiv className='notWideDiv'>\n\t\t\t\t\t\t\t{this.props.children}\n\t\t\t\t\t\t</NotWideDiv>\n\t\t\t\t\t</LightFillBlock>\n\t\t\t\t)\n\t\t}else{\n\t\t\t\treturn(\n\t\t\t\t\t<DarkFillBlock className='darkFillBlock'>\n\t\t\t\t\t\t<NotWideDiv className='notWideDiv'>\n\t\t\t\t\t\t\t{this.props.children}\n\t\t\t\t\t\t</NotWideDiv>\n\t\t\t\t\t</DarkFillBlock>\n\t\t\t\t)\n\t\t}\n\n\t}\n}\n\nexport default PageBlock;\n","import React, { Component } from 'react';\nimport PageBlock from '../components/page-block';\n\ntype Props = {\n\n}\n\ntype State = {\n\ttitle: string\n}\n\nclass NotFoundPage extends Component<Props, State>{\n\n\tconstructor(props: Props){\n\t\tsuper(props);\n\t\tthis.state = {title: 'Page Not Found'};\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"not-found-page\">\n\t\t\t\t<div className=\"not-found-page-body\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<PageBlock fill=\"light\">\n\t\t\t\t\t\t\t<h2>{this.state.title}</h2>\n\t\t\t\t\t\t\t<p>this page does not exist, or you do not have access to this page</p>\n\t\t\t\t\t\t</PageBlock>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default NotFoundPage;\n","import React, { Component } from 'react';\nimport PageBlock from '../components/page-block';\nimport { CircularProgress } from '@mui/material';\n\ntype Props = {\n\n}\n\ntype State = {\n\ttitle: string\n}\n\nclass LoadingPage extends Component<Props, State>{\n\n\tconstructor(props: Props){\n\t\tsuper(props);\n\t\tthis.state = {title: 'Loading...'};\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"loading-page\">\n\t\t\t\t<div className=\"loading-page-body\">\n\t\t\t\t\t<PageBlock fill=\"light\">\n\t\t\t\t\t\t<div style={{textAlign:'center'}}>\n\t\t\t\t\t\t\t<CircularProgress size={100}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</PageBlock>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default LoadingPage;\n","import App from '../App';\nconst fetch = require('node-fetch');\n\nclass UtilityService{\n  static get = async function(route:string, options?:any){\n    return await fetch(route, options)\n    .then((res:any)=>{\n      return(res.json());\n    }).then((json:any)=> {\n      return(json)\n    }).catch(()=>{\n      return(false);\n    });\n  }\n\n  static post = async function(route:string, body?:any, headers?:any){\n    if(!body){\n      body = {\n        'user': App.user().user_id\n      };\n    }\n    if(!headers){\n      headers = { 'Content-Type': 'application/json' }\n    }\n    return await fetch(route, { method: 'post', body: JSON.stringify(body), headers: headers})\n    .then((res:any)=>{\n      return(res.json());\n    }).then((json:any)=> {\n      return(json)\n    }).catch(()=>{\n      return(false);\n    });\n  }\n\n}\nexport default UtilityService;\n","import App from '../App';\nimport UtilityService from './utility-service';\nconst fetch = require('node-fetch');\n\n\nclass AuthService{\n  static validate = async function(userId:string, role:any) {\n    const body = {\n      'user': userId,\n      'role': role\n    };\n    return await fetch('/auth', { method: 'post', body: JSON.stringify(body), headers: { 'Content-Type': 'application/json' }})\n    .then((res:any)=>{\n      return(res.json());\n    }).then((json:any)=> {\n      return(json)\n    }).catch(()=>{\n      return(false);\n    });\n  }\n\n  static userContextGet = async function(userId:string){\n    return UtilityService.get('/usercontext?id='+userId);\n  }\n\n  static getAllAppRoles = async function(userId:string) {\n    const body = {\n      'user': userId\n    };\n    return await fetch('/approles', { method: 'post', body: JSON.stringify(body), headers: { 'Content-Type': 'application/json' }})\n    .then((res:any)=>{\n      return(res.json());\n    }).then((json:any)=> {\n      return(json)\n    }).catch(()=>{\n      return(false);\n    });\n  }\n\n  static getAppUsers = async function(userId:string) {\n    return UtilityService.post('/appusers');\n  }\n\n  static updateUserRoles = async function(userId:string, roleList:any, removeInd: Boolean){\n    return UtilityService.post('/users/'+userId+'/roles', {user: App.user().user_id, roles: roleList, removeInd: removeInd });\n  }\n}\n\nexport default AuthService;\n","import React, { Component } from \"react\";\nimport NotFound from '../Pages/not-found';\nimport Loading from '../Pages/loading'\nimport AuthService from '../Shared/auth-service';\nimport App from '../App'\n\ntype Props = {\n  component: any,\n  userAccess: string,\n  app?: any\n}\n\ntype State = {\n  page: any\n}\n\nclass PrivateRoute extends React.Component<Props, State> {\n  state: State = {page: Loading}\n\n  constructor(props: Props){\n    super(props);\n  }\n\n  componentDidMount() {\n    AuthService.validate(App.user().user_id, this.props.userAccess).then((r)=>{\n      if (r) {\n        this.setState({page: this.props.component})\n      }else{\n        this.setState({page: NotFound})\n      }\n    }).catch( (e) => {\n      this.setState({page: NotFound})\n    });\n  }\n\n  render() {\n    let P = this.state.page\n    if(this.props.app){\n      return <P app={this.props.app}/>\n    }else{\n      return <P />\n    }\n  }\n}\n\nexport default PrivateRoute;\n","import React, { Component } from 'react';\nimport PageBlock from '../components/page-block';\n\ntype Props = {\n\n}\n\ntype State = {\n\ttitle: string\n}\n\nclass HomePage extends Component<Props, State>{\n\n\tconstructor(props: Props){\n\t\tsuper(props);\n\t\tthis.state = {title: 'Home'};\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"home-body\">\n\t\t\t\t<PageBlock fill=\"light\">\n\t\t\t\t\t<div style={{textAlign: 'center'}}>\n\t\t\t\t\t\t<h2>welcome to the brain dump of wittenber0</h2>\n\t\t\t\t\t</div>\n\t\t\t\t</PageBlock>\n\t\t\t\t<PageBlock fill=\"dark\">\n\t\t\t\t\t<h2>more coming soon...</h2>\n\t\t\t\t</PageBlock>\n\n\t\t\t</div>\n\n\t\t)\n\t}\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport PageBlock from '../components/page-block';\n\ntype Props = {\n\n}\n\ntype State = {\n\ttitle: string\n}\n\nclass MyProfilePage extends Component<Props, State>{\n\n\tconstructor(props: Props){\n\t\tsuper(props);\n\t\tthis.state = {title: 'Profile'};\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"about\">\n\t\t\t\t<div className=\"profile-body\">\n\t\t\t\t\t<PageBlock fill=\"light\">\n\t\t\t\t\t\t<div><h2>{this.state.title}</h2></div>\n\t\t\t\t\t\t<p>...to display profile info soon</p>\n\t\t\t\t\t</PageBlock>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default MyProfilePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport App from '../../App';\n\nimport {\n  Paper, Table, TableBody, TableCell, TableContainer, TableHead, Tooltip,\n  TablePagination, TableRow, TableSortLabel, Toolbar, Typography, Checkbox, IconButton\n} from '@mui/material';\n\nfunction descendingComparator(a:any, b:any, orderBy:any) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order:any, orderBy:any) {\n  return order === 'desc'\n    ? (a:any, b:any) => descendingComparator(a, b, orderBy)\n    : (a:any, b:any) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array:any, comparator:any) {\n  const stabilizedThis = array.map((el:any, index:number) => [el, index]);\n  stabilizedThis.sort((a:any, b:any) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el:any) => el[0]);\n}\n\n\n\nfunction getHeadCells(roles:any){\n  let headCells = [\n    { id: 'email', numeric: false, disablePadding: false, label: 'Email', checkbox: false, disabled: false, description: \"The user's email\", rowDetail: null }\n  ];\n\n  roles.map( (r:any) => {\n    headCells.push({ id: r.id, numeric: false, disablePadding: false, label: r.name, checkbox: true, disabled: false, description: r.description, rowDetail: r });\n  });\n\n  headCells.push({ id: 'none', numeric: false, disablePadding: false, label: 'None', checkbox: true, disabled: true, description: \"Has no roles\", rowDetail: null });\n\n  return headCells;\n}\n\n\n\nfunction EnhancedTableHead(props:any) {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property:any) => (event:any) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {getHeadCells(props.roles).map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n  roles: PropTypes.array.isRequired\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props:any) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Manage Users\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable(props:any) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [users, setUsers] = React.useState(props.users);\n\n  const buildData = () => {\n    let d:any = []\n    users.map( (u:any) => {\n      d.push(createRow(u))\n    });\n    return d;\n  }\n\n  const createRow = (user:any) => {\n    let row:any = {user, name: user.name, email: user.email};\n    let hasNone = true;\n    props.roles.map( (role:any) => {\n      row[role.id] = user.roles.filter( (r:any) => {return r.id === role.id}).length > 0;\n      if(row[role.id]){\n        hasNone = false;\n      }\n    });\n    row.none = hasNone;\n\n    return row;\n  }\n\n  let rows = buildData();\n  //let [rows, setRows] = React.useState(buildData());\n\n  const handleRequestSort = (event:any, property:any) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const updateUsers = (role:any, userId:any) => {\n    let roleId = role.id;\n    users.map( (u:any) => {\n      if (u.user_id === userId){\n        if(u.roles.filter( (r:any) => r.id === roleId).length > 0){\n          u.roles = u.roles.filter( (r:any) => r.id !== roleId);\n          props.adminPage.updateUserRoles(u, [roleId]);\n        }else{\n          u.roles.push(role);\n          props.adminPage.updateUserRoles(u);\n        }\n\n      }\n    });\n\n    setUsers(Object.assign([], users));\n  };\n\n  const handleChangePage = (event:any, newPage:any) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event:any) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={'small'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n              roles={props.roles}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row:any, index:number) => {\n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      tabIndex={-1}\n                      key={row.name}\n                    >\n                      {getHeadCells(props.roles).map( (c,i) => {\n                        return (\n                          <TableCell key={c.id} align=\"left\">\n                            {c.checkbox ?\n                              <Checkbox\n                                checked={row[c.id]}\n                                onClick={(event) => updateUsers(c.rowDetail, row.user.user_id)}\n                                disabled={c.disabled || (c.label === 'AppAdmin' && row.user.user_id === App.user().user_id)}\n                              /> :\n                              <Typography>{row[c.id]}</Typography>\n                            }\n                          </TableCell>\n                        )\n                      })}\n\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 33 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport PageBlock from '../components/page-block';\nimport AuthService from '../Shared/auth-service';\nimport UtilityService from '../Shared/utility-service';\nimport App from '../App';\nimport { CircularProgress } from '@mui/material';\n\nimport Table from '../Functions/Table/table';\n\ntype Props = {\n\tapp: any\n}\n\ntype State = {\n\ttitle: string,\n\tappUsers: any,\n\tappRoles: any\n}\n\nclass AdminPage extends Component<Props, State>{\n\n\tconstructor(props: Props){\n\t\tsuper(props);\n\t\tthis.state = {title: 'administration', appUsers: null, appRoles: null};\n\t}\n\n\tcomponentDidMount(){\n\t\tlet dictionaries = [];\n\t\tdictionaries.push(AuthService.getAllAppRoles(App.user().user_id));\n\t\tdictionaries.push(UtilityService.post('/appusers'));\n\n\t\tPromise.all(dictionaries).then( values => {\n\t\t\tthis.setState({appUsers : values[1], appRoles: values[0]});\n\t\t});\n\n\t}\n\n\tupdateUserRoles(user: any, toRemove: Boolean){\n\t\tlet roleList;\n\n\t\tif(toRemove){\n\t\t\troleList = toRemove;\n\t\t} else {\n\t\t\troleList = user.roles.map( (r: any) => r.id);\n\t\t}\n\n\t\tif(user.user_id === App.user().user_id){\n\t\t\tconsole.log(user.roles);\n\t\t\tthis.props.app.updateMyRoles(user.roles);\n\t\t}\n\n\t\tAuthService.updateUserRoles(user.user_id, roleList, !!toRemove);\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"admin\">\n\t\t\t\t<div className=\"admin-body\">\n\t\t\t\t\t{this.state.appUsers===null? <PageBlock fill=\"light\"><CircularProgress size={100} /></PageBlock> :\n\t\t\t\t\t\t<PageBlock fill=\"light\">\n\t\t\t\t\t\t\t<h2>Manage Users</h2>\n\t\t\t\t\t\t\t<Table users={this.state.appUsers} roles={this.state.appRoles} adminPage={this}/>\n\t\t\t\t\t\t</PageBlock>\n\t\t\t\t\t}\n\t\t\t\t\t<PageBlock fill=\"dark\">\n\t\t\t\t\t\t<div><h2>{this.state.title}</h2></div>\n\t\t\t\t\t\t<p>do admin things below</p>\n\t\t\t\t\t</PageBlock>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t)\n\t}\n}\n\nexport default AdminPage;\n","import App from '../App';\nimport Book from '../ClientBrain/Arbitrage/Models/v2/Book';\nimport UtilityService from './utility-service';\nconst fetch = require('node-fetch');\n\n//arbitrage\nconst bookListUrl = 'https://api.actionnetwork.com/web/v1/books';\nconst oddsUrl = 'https://api.actionnetwork.com/web/v1/scoreboard/all?bookIds=';\nconst actionLabsBookOdds = 'https://d3ttxfuywgi7br.cloudfront.net/odds/';\nconst actionLabsPlayers = 'https://d3ttxfuywgi7br.cloudfront.net/players/projections/all/actionnetwork/default.json'\nconst actionLabsPropEvents = 'https://d3ttxfuywgi7br.cloudfront.net/events/default.json?leagueId=1,2,3&initialRequest=true&xid=66baf522-6536-496c-bcd1-3405d15b434c'\nconst actionLabsMarketEvents = 'https://d3ttxfuywgi7br.cloudfront.net/events/default.json?leagueId=1,2,3&initialRequest=true&xid=d7ffcc85-db0a-4d62-b94a-8fedb88a2c39'\n\n//betOnline\nconst betOnlineOdds = 'https://api.betonline.ag/offering/api/offering/sports/offering-by-today-games'\n\n//pinnacle\nconst pinnacleMatchUps = 'https://guest.api.arcadia.pinnacle.com/0.1/sports/'\nconst pinnacleSports = 'https://guest.api.arcadia.pinnacle.com/0.1/sports'\nconst pinnacleMarkets = 'https://guest.api.arcadia.pinnacle.com/0.1/sports/'\nconst pinnacleGameDetails = 'https://guest.api.arcadia.pinnacle.com/0.1/matchups/1551220294/related'\nconst pinnacleGameLines = 'https://guest.api.arcadia.pinnacle.com/0.1/matchups/1551220294/markets/related/straight'\n\nclass ArbitrageService{\n\n  static getAllBooks = async function(){\n    return UtilityService.get(bookListUrl);\n  }\n\n  static getAllOddsForDate = async function(d:Date, selectedBooks: number[]){\n    let dateString;\n    if(d == undefined){\n      d = new Date();\n    }\n    dateString = d.getFullYear().toString();\n    dateString += (d.getMonth() +1).toString().padStart(2, '0') ;\n    dateString += d.getDate().toString().padStart(2, '0');\n    return UtilityService.get(oddsUrl + selectedBooks.join() + '&date='+dateString);\n  }\n\n  static getAtionLabsBookOdds = async function(bookId: number){\n    return UtilityService.get(actionLabsBookOdds + bookId +'/default.json');\n  }\n\n  static getActionLabsPlayers = async function(){\n    return UtilityService.get(actionLabsPlayers);\n  }\n\n  static getActionLabsPropEvents = async function(){\n    return UtilityService.get(actionLabsPropEvents);\n  }\n\n  static getActionLabsMarketEvents = async function(){\n    return UtilityService.get(actionLabsMarketEvents);\n  }\n\n  static getPinnacleMatchUps = async function(sportId: number){\n    let options = {\n      \"headers\": {\n        \"accept\": \"application/json\",\n        \"accept-language\": \"en-US,en;q=0.9\",\n        \"content-type\": \"application/json\",\n        \"sec-ch-ua\": \"\\\" Not A;Brand\\\";v=\\\"99\\\", \\\"Chromium\\\";v=\\\"99\\\", \\\"Google Chrome\\\";v=\\\"99\\\"\",\n        \"sec-ch-ua-mobile\": \"?0\",\n        \"sec-ch-ua-platform\": \"\\\"macOS\\\"\",\n        \"sec-fetch-dest\": \"empty\",\n        \"sec-fetch-mode\": \"cors\",\n        \"sec-fetch-site\": \"same-site\",\n        \"x-api-key\": \"CmX2KcMrXuFmNg6YFbmTxE0y9CIrOi0R\",\n        \"x-device-uuid\": \"ad3e5664-f67a62d5-3de6d5cd-15c70fa6\"\n      },\n      \"referrer\": \"https://www.pinnacle.com/\",\n      \"referrerPolicy\": \"strict-origin-when-cross-origin\",\n      \"body\": null,\n      \"method\": \"GET\",\n      \"mode\": \"cors\",\n      \"credentials\": \"omit\"\n    }\n\n    return UtilityService.get(pinnacleMatchUps + sportId + '/matchups?withSpecials=false', options);\n  }\n\n  static getPinnacleMarkets = async function(sportId:number){\n    let options = {\n      \"headers\": {\n        \"accept\": \"application/json\",\n        \"accept-language\": \"en-US,en;q=0.9\",\n        \"content-type\": \"application/json\",\n        \"sec-ch-ua\": \"\\\" Not A;Brand\\\";v=\\\"99\\\", \\\"Chromium\\\";v=\\\"99\\\", \\\"Google Chrome\\\";v=\\\"99\\\"\",\n        \"sec-ch-ua-mobile\": \"?0\",\n        \"sec-ch-ua-platform\": \"\\\"macOS\\\"\",\n        \"sec-fetch-dest\": \"empty\",\n        \"sec-fetch-mode\": \"cors\",\n        \"sec-fetch-site\": \"same-site\",\n        \"x-api-key\": \"CmX2KcMrXuFmNg6YFbmTxE0y9CIrOi0R\",\n        \"x-device-uuid\": \"ad3e5664-f67a62d5-3de6d5cd-15c70fa6\"\n      },\n      \"referrer\": \"https://www.pinnacle.com/\",\n      \"referrerPolicy\": \"strict-origin-when-cross-origin\",\n      \"body\": null,\n      \"method\": \"GET\",\n      \"mode\": \"cors\",\n      \"credentials\": \"omit\"\n    }\n    return UtilityService.get(pinnacleMarkets + sportId + '/markets/straight?primaryOnly=false&withSpecials=false', options);\n  }\n\n  static getBetOnlineOdds = async function(sport: string){\n    let options = {\n      \"headers\": {\n        \"accept\": \"application/json, text/plain, */*\",\n        \"accept-language\": \"en-US,en;q=0.9\",\n        \"access-control-allow-headers\": \"Content-Type\",\n        \"access-control-allow-methods\": \"GET, POST\",\n        \"access-control-allow-origin\": \"https://api.betonline.ag/offering/api/offering/sports/offering-by-today-games\",\n        \"actual-time\": \"1648563709976\",\n        \"content-type\": \"application/json\",\n        \"contests\": \"na\",\n        \"gmt-offset\": \"-4\",\n        \"gsetting\": \"bolnasite\",\n        \"iso-time\": \"2022-03-29T14:21:49.976Z\",\n        \"sec-ch-ua\": \"\\\" Not A;Brand\\\";v=\\\"99\\\", \\\"Chromium\\\";v=\\\"99\\\", \\\"Google Chrome\\\";v=\\\"99\\\"\",\n        \"sec-ch-ua-mobile\": \"?0\",\n        \"sec-ch-ua-platform\": \"\\\"macOS\\\"\",\n        \"sec-fetch-dest\": \"empty\",\n        \"sec-fetch-mode\": \"cors\",\n        \"sec-fetch-site\": \"same-site\",\n        \"utc-offset\": \"240\",\n        \"utc-time\": \"Tue, 29 Mar 2022 14:21:49 GMT\"\n      },\n      \"referrer\": \"https://www.betonline.ag/\",\n      \"referrerPolicy\": \"strict-origin-when-cross-origin\",\n      \"body\": \"{\\\"Sport\\\":\\\"\"+sport+\"\\\",\\\"Period\\\":0}\",\n      \"method\": \"POST\",\n      \"mode\": \"cors\",\n      \"credentials\": \"omit\"\n    }\n\n    return await fetch(\"https://api.betonline.ag/offering/api/offering/sports/offering-by-today-games\", options)\n    .then((res:any)=>{\n      return(res.json());\n    }).then((json:any)=> {\n      return(json)\n    }).catch(()=>{\n      return(false);\n    });\n  }\n\n  static getBovadaOdds = async function(sport: string){\n    return UtilityService.get(\"https://www.bovada.lv/services/sports/event/coupon/events/A/description/\"+sport+\"?marketFilterId=def&preMatchOnly=true&lang=en\");\n  }\n\n  static updateMyBooks = async function(myBooks: any){\n    let userId = App.user().user_id;\n    return UtilityService.post('/users/'+userId+'/arbitrage/myBooks', {user: userId, myBooks: myBooks});\n  }\n\n}\n\n\nexport default ArbitrageService\n","//order here matters\nexport enum BetDuration {\n    Game,\n    FirstPeriod,\n    SecondPeriod,\n    ThirdPeriod,\n    FourthPeriod,\n    FifthPeriod,\n    SixthPeriod,\n    SeventhPeriod,\n    EightPeriod,\n    Other   \n}","export enum BetFactorTypeEnum {\n    Over,\n    Under,\n    Away,\n    Home,\n    Draw,\n    HeadToHead\n}","export enum BetTypeEnum {\n    OverUnder,\n    Spread,\n    MoneyLine,\n    PlayerProp,\n    TeamTotal,\n    TeamTotalHome,\n    TeamTotalAway,\n    All\n}","import { Card, CardContent, Typography, CardActions, Grid, Paper, Divider, Button } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport React from \"react\";\nimport BetChoice from '../../ClientBrain/Arbitrage/Models/v2/BetChoice';\nimport BetChoiceFactors from '../../ClientBrain/Arbitrage/Models/v2/BetChoiceFactors';\n\nimport Book from '../../ClientBrain/Arbitrage/Models/v2/Book'\nimport { BetDuration } from '../../ClientBrain/Arbitrage/Models/v2/enum/BetDuration';\nimport { BetFactorTypeEnum } from '../../ClientBrain/Arbitrage/Models/v2/enum/BetFactorTypeEnum';\nimport { BetTypeEnum } from '../../ClientBrain/Arbitrage/Models/v2/enum/BetTypeEnum';\nimport Factor from '../../ClientBrain/Arbitrage/Models/v2/Factor';\nimport FactorTypeSummary from '../../ClientBrain/Arbitrage/Models/v2/FactorTypeSummary';\nimport Participant from '../../ClientBrain/Arbitrage/Models/v2/Participant';\n\nconst BestTypography = styled(Typography)(({ theme }) => ({\n  color: '#99ffaa'\n}));\n\nconst Item = styled(Paper)(({ theme }: any) => ({\n  backgroundColor: theme.palette.dark.three,\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  alignItems:'center',\n  justifyContent: 'center',\n  verticalAlign: 'middle',\n  color: '#aaaaaa',\n  height: '50px'\n}));\n\nconst TeamItem = styled(Paper)(({ theme }: any) => ({\n  backgroundColor: theme.palette.dark.three,\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  paddingLeft: theme.spacing(2),\n  textAlign: 'left',\n  color: 'white',\n  height: '50px'\n}));\n\nfunction getEVLabel(betChoice: BetChoice, evSummary: FactorTypeSummary){\n  if(evSummary && betChoice.BestEV === evSummary.Value){\n    return <BestTypography key={evSummary.PickLabel}>{evSummary.Value}%</BestTypography>\n  }else if(evSummary){\n    return <Typography key={evSummary.PickLabel}>{evSummary.Value}%</Typography>\n  }\n}\n\nfunction getFactorLabelByBook(factorList: Factor[], bookId: number, isUS: Boolean, i: number){\n  let factor = factorList.find((e)=> {return e.Book.BookId === bookId});\n  let display = '';\n  if(factor && isUS){\n    display = factor.AmericanOdds.toString();\n  }else if(factor && !isUS){\n    display = factor.DecimalOdds.toString();\n  }else{\n    display = 'N/A';\n  }\n  if(factor && factor.Best){\n    return(<BestTypography key={i}>{display}</BestTypography>)\n  }else{\n    return (<Typography key={i}>{display}</Typography>)\n  }\n}\n\nfunction getNetEV(houseLine?: number){\n  if(houseLine){\n    return Math.round((1-houseLine)*10000)/100;\n  }\n}\n\nfunction getBetParticipants(betParticipants: Participant[]){\n  betParticipants.map((p,i) => {\n    return <Typography key={i}>{p.Name}</Typography>\n  })\n}\n\ntype Props = {\n  betChoice: BetChoice,\n  myBooks: any\n}\n\nexport default function GameCard(props: Props){\n  return(\n    <Grid container spacing={1} sx={{mt:0.1}}>\n      <Grid item xs={2.5}>\n        <TeamItem>\n          <Typography>{props.betChoice.BetParticipants.find(p => p.Id === 'home')?.Name}</Typography>\n          <Typography>{props.betChoice.BetParticipants.find(p => p.Id === 'away')?.Name}</Typography>\n        </TeamItem>\n      </Grid>\n      <Grid item xs={1.5}>\n        <Item>\n          <Typography variant='subtitle2'>{BetTypeEnum[props.betChoice.BetType]}: {props.betChoice.Line}</Typography>\n          <Typography variant='subtitle2'>v: {BetDuration[props.betChoice.BetDuration]}</Typography>\n          \n        </Item>\n      </Grid>\n      <Grid item xs={1}>\n        <Item>\n          <Typography>{getNetEV(props.betChoice.HouseLine)}%</Typography>\n        </Item>\n      </Grid>\n      <Grid item xs={1}>\n        {props.betChoice.Evs ? \n          <Item>\n          {props.betChoice.Evs.map((evLabel) => {\n            return getEVLabel(props.betChoice, evLabel)\n          })}\n          </Item>\n        :\n          <Item>\n            <Typography>N/A</Typography>\n          </Item>\n        }\n        \n      </Grid>\n      <Grid item xs={1}>\n        <Item>\n          {props.betChoice.Choices.map((c, i) => {\n            return <Typography key={i}>{BetFactorTypeEnum[c.Label]}</Typography>\n          })}\n        </Item>\n      </Grid>\n      {props.myBooks.map((b: Book) => {\n        return(\n          <Grid item xs key={b.BookId}>\n            <Item>\n              {props.betChoice.Choices.map((c, i) => {\n                return getFactorLabelByBook(c.Factors, b.BookId, true, i)\n              })}\n            </Item>\n          </Grid>\n        );\n      })}\n    </Grid>\n  )\n}\n","import * as React from 'react';\nimport Popover from '@mui/material/Popover';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Paper from '@mui/material/Paper';\nimport Divider from '@mui/material/Divider';\nimport { styled } from '@mui/material/styles';\nimport Book from '../../ClientBrain/Arbitrage/Models/v2/Book';\n\n/*\nconst StyledButton = styled(Button)(({ theme }) => {\n\treturn({\n    color: 'white',\n    borderColor: 'rgba(255, 255, 255, 0.3)',\n    &:hover {\n      borderColor: '#ffffff'\n    }\n  }\n  });\n});*/\n\nconst StyledButton = styled(Button)`\n  color: white;\n  border-color: rgba(255, 255, 255, 0.3);\n  :hover {\n    border-color: #ffffff;\n  }\n`\n\nconst StyledFCL = styled(FormControlLabel)`\n  color: rgba(255, 255, 255, 0.7);\n`\n\ntype Props = {\n  myBooks: Book[],\n  updateBooks: any\n}\nexport default function BasicPopover(props: Props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event: any) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const isChecked = (id: number) =>{\n    return props.myBooks.map(b => b.BookId).includes(id);\n  }\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n  return (\n    <div>\n      <StyledButton aria-describedby={id} variant=\"outlined\" onClick={handleClick}>\n        Manage Books\n      </StyledButton>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n      >\n        <Paper>\n          <FormGroup sx={{p:2}}>\n            <Typography variant='subtitle1'>International Books</Typography>\n            <StyledFCL  control={<Checkbox onChange={props.updateBooks} value={8} checked={isChecked(8)}/>} label=\"My Bookie\"/>\n            <StyledFCL  control={<Checkbox onChange={props.updateBooks} value={21} checked={isChecked(21)}/>} label=\"Bovada\"/>\n            <StyledFCL  control={<Checkbox onChange={props.updateBooks} value={1001} checked={isChecked(1001)}/>} label=\"Bet Online\"/>\n            <Divider sx={{my:1}}/>\n            <Typography variant='subtitle1'>Michigan Books</Typography>\n            <StyledFCL  control={<Checkbox onChange={props.updateBooks} value={351} checked={isChecked(351)}/>} label=\"PointsBet MI\"/>\n            <StyledFCL  control={<Checkbox onChange={props.updateBooks} value={355} checked={isChecked(355)}/>} label=\"Caesers MI\"/>\n            <StyledFCL  control={<Checkbox onChange={props.updateBooks} value={366} checked={isChecked(366)}/>} label=\"Fan Duel MI\"/>\n            <StyledFCL  control={<Checkbox onChange={props.updateBooks} value={283} checked={isChecked(283)}/>} label=\"Bet MGM MI\"/>\n            <StyledFCL  control={<Checkbox onChange={props.updateBooks} value={68} checked={isChecked(68)}/>} label=\"Draft Kings\"/>\n          </FormGroup>\n        </Paper>\n      </Popover>\n    </div>\n  );\n}\n","export default class Book {\n    public BookId: number;\n    public BookName: string;\n    public BookLogo?: string;\n\n    public constructor(bookId:number, bookName:string, bookLogo?:string){\n        this.BookId = bookId;\n        this.BookName = bookName;\n        this.BookLogo = bookLogo;\n    }\n}","import ArbitrageService from '../../Shared/arbitrage-service';\nimport Book from './Models/v2/Book';\nimport App from '../../App';\n\nconst defaultSelectedBookIds = [1003, 8, 21, 1001];\nconst bovadaLogo = 'https://www.aplussportsandmore-fanshop-baseballfield.com/images/bovada-logo_0.png'\nconst myBookieLogo = 'https://images.squarespace-cdn.com/content/v1/5ab4527b3c3a536a7a352c05/1631109644782-2TR7KXFGKPA84ZHFCI94/TRANSPARENT-MB.png'\n\nclass BookManager {\n  private static instance?: BookManager\n  isLoaded: Boolean;\n  allBooks: Book[];\n  selectedBooks: Book[];\n  selectedBookIds: number[];\n\n  private constructor(){\n    this.allBooks = [];\n    this.selectedBooks = [];\n    this.isLoaded = false;\n    if(App.user().user_metadata.arbitrage && App.user().user_metadata.arbitrage.myBooks){\n      this.selectedBookIds = App.user().user_metadata.arbitrage.myBooks;\n    } else {\n      this.selectedBookIds = defaultSelectedBookIds;\n    }\n  }\n\n  private static createInstance() {\n    let object = new BookManager();\n    return object;\n  }\n\n  public static getInstance() {\n    if (!this.instance) {\n        this.instance = this.createInstance();\n    }\n    return this.instance;\n}\n\n  getSelectedBookIds(){\n    return this.selectedBookIds;\n  }\n\n  async loadBooks(){\n    this.allBooks = [];\n    return await ArbitrageService.getAllBooks().then((r)=>{\n      this.getMyLiveBooks().forEach( book => {\n        this.allBooks.push(book);\n      })\n\t\t\tr[\"books\"].forEach( (book:any) => {\n        let bookName = book['display_name'];\n    \t\tlet bookLogo = (book['meta']['logos'] ? book['meta']['logos']['primary'] : null);\n        if(book['id'] === 21){\n          bookLogo = bovadaLogo;\n        }\n        if(book['id'] === 8){\n          bookLogo = myBookieLogo;\n        }\n        this.allBooks.push(new Book(book['id'], bookName, bookLogo));\n      });\n\t\t\tthis.selectedBooks = this.allBooks.filter((b)=> {return this.selectedBookIds.includes(b.BookId)});\n      this.isLoaded = true;\n\t\t});\n  }\n\n  getSelectedBooks(){\n    return this.selectedBooks;\n  };\n\n  getBookById(id: number){\n    let b = this.allBooks.find( b => b.BookId === id)\n    if(b){\n      return b;\n    }else{\n      return new Book(0, 'Unknown Book')\n    }\n  }\n\n  getMyLiveBooks(){\n    let liveBooks = [\n      new Book(1003, 'Pinnacle (Live)', 'https://www.pinnacle.com/static/media/logo-on-dark.94bbcdf8.svg'),\n      new Book(1001, 'BetOnline (Live)', 'https://www.predictem.com/wp-content/uploads/2018/05/BetOnline-logo.png')\n    ]\n    return liveBooks;\n  }\n\n  updateBookById(bookId: number){\n    if(this.selectedBookIds.includes(bookId)){\n      this.selectedBookIds = this.selectedBookIds.filter(b => b !== bookId);\n    }else {\n      this.selectedBookIds.push(bookId);\n    }\n    this.selectedBooks = this.allBooks.filter((b)=> {return this.selectedBookIds.includes(b.BookId)});\n    App.cacheMyBooks(this.selectedBookIds);\n  }\n}\n\nexport default BookManager;\n","export enum PlayerPropTypeEnum {\n    NonApplicable,\n    MostTotalBases,\n    MostStrikeouts,\n    TotalBases,\n    Strikeouts,\n    Assists\n}","import Book from \"./Book\";\n\nexport default class Factor {\n    DecimalOdds: number;\n    AmericanOdds: number;\n    Book: Book;\n    Best: boolean;\n    EV?: number;\n    \n    constructor(decimalOdds:number, americanOdds:number, book:Book){\n        this.DecimalOdds = decimalOdds;\n        this.AmericanOdds = americanOdds;\n        this.Book = book;\n        this.Best = false;\n    }\n   \n}\n","import { BetFactorTypeEnum } from \"./enum/BetFactorTypeEnum\";\nimport Factor from \"./Factor\";\n\nexport default class BetFactor {\n    public Label: BetFactorTypeEnum;\n    public Factor: Factor;\n\n    public constructor(label:BetFactorTypeEnum, factor:Factor){\n        this.Label = label;\n        this.Factor = factor;\n    }\n}","export default class Participant {\n    public Id: any;\n    public Name: string;\n\n    public constructor(id:any, name:string){\n        this.Id = id;\n        this.Name = name;\n    }\n}","export enum SportEnum {\n    Basketball,\n    Baseball,\n    Soccer,\n    Golf,\n    Hockey,\n    Horse,\n    Tennis,\n    Chess,\n    Boxing,\n    Football,\n    MartialArts,\n    Other\n}","import Factor from \"./Factor\";\nimport { BetDuration } from \"./enum/BetDuration\";\nimport BetFactor from \"./BetFactor\";\nimport { BetTypeEnum } from \"./enum/BetTypeEnum\";\nimport Participant from \"./Participant\";\nimport Book from \"./Book\";\nimport { BetFactorTypeEnum } from \"./enum/BetFactorTypeEnum\";\nimport { PlayerPropTypeEnum } from \"./enum/PlayerPropTypeEnum\";\n\nexport default class BookBet {\n    public GameId: string;\n    public BetType: BetTypeEnum;\n    public PlayerPropType: PlayerPropTypeEnum;\n    public BetDuration: BetDuration;\n    public Line: number;\n    public BetFactors: BetFactor[];\n    public BetParticipants: Participant[];\n    public JoinLabel: string;\n    public Book: Book;\n\n    constructor(gameId:string, betType: BetTypeEnum, playerPropType: PlayerPropTypeEnum, betDuration: BetDuration, line: number, betFactors: BetFactor[], betParticipants: Participant[], date:Date, book:Book){\n        this.GameId = gameId;\n        this.BetType = betType\n        this.PlayerPropType = playerPropType;\n        this.BetDuration = betDuration;\n        this.Line = line;\n        this.BetFactors = betFactors;\n        this.BetParticipants = betParticipants;\n        this.JoinLabel = this.GenerateJoinLabel(this.getDateString(date));\n        this.Book = book;\n    }\n\n    public GenerateExampleModels(){\n        let book = new Book(1001, 'BetOnline', 'BetOnlineLogo');\n        let participant1 = new Participant(1, 'D\\'Angelo Russell');\n        let participant2 = new Participant(2, 'Tim Anderson');\n        let participant3 = new Participant(3, 'Brandon Lowe');\n        let betFactors1 = [];\n        let betFactors2 = [];\n        let betFactors3 = [];\n        betFactors1.push\n        (\n            new BetFactor(BetFactorTypeEnum.Over, new Factor(1.9, -114, book)),\n            new BetFactor(BetFactorTypeEnum.Under, new Factor(1.9, -114, book))\n        );\n        betFactors2.push(\n            new BetFactor(BetFactorTypeEnum.HeadToHead, new Factor(1.95, -105, book))\n        );\n        betFactors3.push(\n            new BetFactor(BetFactorTypeEnum.HeadToHead, new Factor(1.69, -145, book))\n        );\n        \n        let bookBetOverUnderAssistsDangeloRussell = new BookBet(\n            '123', \n            BetTypeEnum.PlayerProp, \n            PlayerPropTypeEnum.Assists, \n            BetDuration.Game, \n            7.5, \n            betFactors1, \n            [participant1], \n            new Date(2022,4, 16), \n            book\n        )\n\n        let bookBetHeadToHeadTimWinsBrandon = new BookBet(\n            '234', \n            BetTypeEnum.PlayerProp, \n            PlayerPropTypeEnum.MostTotalBases, \n            BetDuration.Game, \n            0, \n            betFactors2, \n            [participant2, participant3], \n            new Date(2022,4, 16), \n            book\n        )\n        \n        let bookBetHeadToHeadBrandonWinsTim = new BookBet(\n            '234', \n            BetTypeEnum.PlayerProp, \n            PlayerPropTypeEnum.MostTotalBases, \n            BetDuration.Game, \n            0, \n            betFactors3, \n            [participant3, participant2], \n            new Date(2022,4, 16), \n            book\n        )\n    }\n\n    public GenerateJoinLabel(gameDateString: string):string{\n        let playerPropLabel = this.PlayerPropType != PlayerPropTypeEnum.NonApplicable ? `${this.PlayerPropType.toString()}|` : '';  \n        let participantsLabel = this.BetParticipants.map(p => p.Name).join('|');\n        let joinLabel = `${BetTypeEnum[this.BetType]}|${playerPropLabel}${BetDuration[this.BetDuration]}|${participantsLabel}|${this.Line}|${gameDateString}`;\n         \n        return joinLabel;\n    }\n\n    getDateString(d:Date){\n        return d.getFullYear().toString()+('0'+(d.getMonth()+1)).slice(-2)+('0'+d.getDate()).slice(-2);\n    }\n}\n\n","import BettingEvent from \"./BettingEvent\";\nimport BookBet from \"./BookBet\";\nimport { SportEnum } from \"./enum/SportEnum\";\nimport Participant from \"./Participant\";\n\nexport default class BookEvent {\n    public BookBets: BookBet[];\n    public BettingEvent: BettingEvent;\n\n    constructor(BookBets: BookBet[], bettingEvent: BettingEvent){\n        this.BookBets = BookBets;\n        this.BettingEvent = bettingEvent;\n    }\n}","import BetFactor from \"./BetFactor\";\nimport { BetDuration } from \"./enum/BetDuration\";\nimport { BetTypeEnum } from \"./enum/BetTypeEnum\";\nimport { PlayerPropTypeEnum } from \"./enum/PlayerPropTypeEnum\";\nimport { SportEnum } from \"./enum/SportEnum\";\nimport Participant from \"./Participant\";\n\nexport default class BettingEvent{\n    public LeagueName: string;\n    public Sport: SportEnum;\n    public EventParticipants: Participant[];\n    public GameId: string;\n    public EventDate: Date;\n\n    constructor(LeagueName: string, Sport: SportEnum, EventParticipants: Participant[], GameId: string, EventDate: Date){\n        this.LeagueName = LeagueName;\n        this.Sport = Sport;\n        this.EventParticipants = EventParticipants;\n        this.GameId = GameId;\n        this.EventDate = EventDate;\n    }\n}","import ArbitrageService from '../../Shared/arbitrage-service';\nimport BookManager from './book-manager';\nimport BookBet from './Models/v2/BookBet';\nimport BookEvent from './Models/v2/BookEvent';\nimport { BetTypeEnum } from './Models/v2/enum/BetTypeEnum';\nimport BetFactor from './Models/v2/BetFactor';\nimport Factor from './Models/v2/Factor';\nimport { BetFactorTypeEnum } from './Models/v2/enum/BetFactorTypeEnum';\nimport Participant from './Models/v2/Participant';\nimport Book from './Models/v2/Book';\nimport { SportEnum } from './Models/v2/enum/SportEnum';\nimport { PlayerPropTypeEnum } from './Models/v2/enum/PlayerPropTypeEnum';\nimport BettingEvent from './Models/v2/BettingEvent';\nimport { BetDuration } from './Models/v2/enum/BetDuration';\n\nexport default class ActionNetworkBrain {\n  bookEventTree: BookEvent[];\n\n  constructor(){\n    this.bookEventTree = [];\n  }\n\n  async getGameTree(){\n    let d = new Date();\n    let bm = BookManager.getInstance();\n\n\t\treturn await ArbitrageService.getAllOddsForDate(d, bm.getSelectedBookIds()).then((r)=>{\n\t\t    r[\"all_games\"].forEach( (league:any) => {\n          league['games'].forEach( (game:any) => {\n\n            let odds = game['odds'];\n            if(odds && game['status'] !== 'complete'){\n\n              let participants: Participant[] = [];\n\n              let bookBets: BookBet[] = [];\n              let home = game['teams'].find((e:any) => e.id === game['home_team_id']);\n              let away = game['teams'].find((e:any) => e.id === game['away_team_id'])\n\n              let homeName = home['full_name'];\n              let awayName = away['full_name'];\n\n              //order here matters\n              participants.push(new Participant('home', homeName));\n              participants.push(new Participant('away', awayName));\n\n              let bettingEvent = new BettingEvent(\n                league['league_name'],\n                this.getSport(league['league_name']),\n                participants,\n                this.getGameId(homeName, awayName, league['league_name'], new Date(game['start_time'])),\n                new Date(game['start_time'])\n              );\n              \n              odds.forEach( (odd:any) => {\n                let book = bm.getBookById(odd['book_id'])\n                let bookName = book?.BookName;\n                if(book !== undefined && bookName !== 'Open' && bookName !== 'Consensus'){\n                  let mlBetFactors: BetFactor[] = [];\n                  let sBetFactors: BetFactor[] = [];\n                  let ouBetFactors: BetFactor[] = [];\n                  let tthBetFactors: BetFactor[] = [];\n                  let ttaBetFactors: BetFactor[] = [];\n\n                  this.setBetFactor('ml_home', odd, mlBetFactors, BetFactorTypeEnum.Home, book);\n                  this.setBetFactor('ml_away', odd, mlBetFactors, BetFactorTypeEnum.Away, book);\n                  this.setBetFactor('draw', odd, mlBetFactors, BetFactorTypeEnum.Draw, book);\n\n                  this.setBetFactor('spread_home_line', odd, sBetFactors, BetFactorTypeEnum.Home, book);\n                  this.setBetFactor('spread_away_line', odd, sBetFactors, BetFactorTypeEnum.Away, book);\n\n                  this.setBetFactor('over', odd, ouBetFactors, BetFactorTypeEnum.Over, book);\n                  this.setBetFactor('under', odd, ouBetFactors, BetFactorTypeEnum.Under, book);\n\n                  this.setBetFactor('home_over', odd, tthBetFactors, BetFactorTypeEnum.Over, book);\n                  this.setBetFactor('home_under', odd, tthBetFactors, BetFactorTypeEnum.Under, book);\n\n                  this.setBetFactor('away_over', odd, ttaBetFactors, BetFactorTypeEnum.Over, book);\n                  this.setBetFactor('away_under', odd, ttaBetFactors, BetFactorTypeEnum.Under, book);\n                  \n                  if(mlBetFactors.length > 0){\n                    let mlbb = new BookBet(\n                      this.getGameId(homeName, awayName, league['league_name'], d),\n                      BetTypeEnum.MoneyLine,\n                      PlayerPropTypeEnum.NonApplicable,\n                      this.getBetDuration(odd['type']),\n                      0,\n                      mlBetFactors,\n                      participants,\n                      new Date(game['start_time']),\n                      book\n                    )\n                    bookBets.push(mlbb);\n                  }\n\n                  if(sBetFactors.length > 0){\n                    let sbb = new BookBet(\n                      this.getGameId(homeName, awayName, league['league_name'], d),\n                      BetTypeEnum.Spread,\n                      PlayerPropTypeEnum.NonApplicable,\n                      this.getBetDuration(odd['type']),\n                      odd['spread_home'],\n                      sBetFactors,\n                      participants,\n                      new Date(game['start_time']),\n                      book\n                    );\n                    bookBets.push(sbb);\n                  }\n\n                  if(ouBetFactors.length > 0){\n                    let oubb = new BookBet(\n                      this.getGameId(homeName, awayName, league['league_name'], d),\n                      BetTypeEnum.OverUnder,\n                      PlayerPropTypeEnum.NonApplicable,\n                      this.getBetDuration(odd['type']),\n                      odd['total'],\n                      ouBetFactors,\n                      participants,\n                      new Date(game['start_time']),\n                      book\n                    );\n                    bookBets.push(oubb);\n                  }\n\n                  if(tthBetFactors.length > 0){\n                    let tthbb = new BookBet(\n                      this.getGameId(homeName, awayName, league['league_name'], d),\n                      BetTypeEnum.TeamTotalHome,\n                      PlayerPropTypeEnum.NonApplicable,\n                      this.getBetDuration(odd['type']),\n                      odd['home_total'],\n                      tthBetFactors,\n                      participants,\n                      new Date(game['start_time']),\n                      book\n                    );\n                    bookBets.push(tthbb);\n                  }\n\n                  if(ttaBetFactors.length > 0){\n                    let ttabb = new BookBet(\n                      this.getGameId(homeName, awayName, league['league_name'], d),\n                      BetTypeEnum.TeamTotalAway,\n                      PlayerPropTypeEnum.NonApplicable,\n                      this.getBetDuration(odd['type']),\n                      odd['away_total'],\n                      ttaBetFactors,\n                      participants,\n                      new Date(game['start_time']),\n                      book\n                    );\n                    bookBets.push(ttabb);\n                  }\n                }\n              });\n              \n              let bookEvent = new BookEvent(\n                bookBets,\n                bettingEvent\n              );\n\n              this.bookEventTree.push(bookEvent);\n            }\n          });\n        });\n        return(this.bookEventTree);\n\t\t});\n  }\n\n  getDecimialFromAmerican(ml:number){\n\t\tlet f;\n\t\tif(ml > 0){\n\t\t\tf = Math.round((1 + (ml/100))*100)/100;\n\t\t}else{\n\t\t\tf = Math.round((1 + (-100/ml))*100)/100;\n\t\t}\n\t\treturn f;\n\t}\n\n  //for type 'game' games id will be of format 'game|leagueName|homeName|awayName|YYYYMMDD'\n  getGameId(homeName:string, awayName:string, leagueName:string, date:Date){\n    return 'game|'+leagueName+'|'+homeName+'|'+awayName+'|'+this.getDateString(date)\n  }\n\n  getDateString(d:Date){\n    return d.getFullYear().toString()+('0'+(d.getMonth()+1)).slice(-2)+('0'+d.getDate()).slice(-2);\n  }\n\n  getBetType(bt:string){\n    if(bt === 'ml'){\n      return BetTypeEnum.MoneyLine\n    }\n    if(bt === 'spread'){\n      return BetTypeEnum.Spread\n    }\n    return \n  }\n\n  setBetFactor(anLabel:string, anOdd:any, bf:BetFactor[], bft: BetFactorTypeEnum, book:Book){\n    if(anOdd[anLabel]){\n      bf.push(new BetFactor(\n        bft,\n        new Factor(this.getDecimialFromAmerican(anOdd[anLabel]), anOdd[anLabel], book)\n      ));\n    }\n  }\n\n  getSport(league:string){\n    if(league === 'nba'){\n      return SportEnum.Basketball\n    }\n    if(league === 'soccer'){\n      return SportEnum.Soccer\n    }\n    if(league === 'mlb'){\n      return SportEnum.Baseball\n    }\n    if(league === 'nhl'){\n      return SportEnum.Hockey\n    }\n    return SportEnum.Other\n  }\n\n  getBetDuration(durationString:string){\n    if(durationString === 'game'){\n      return BetDuration.Game\n    }else if(durationString === 'firsthalf'){\n      return BetDuration.FirstPeriod;\n    }else if(durationString === 'secondhalf'){\n      return BetDuration.SecondPeriod;\n    }else if(durationString === 'firstperiod'){\n      return BetDuration.FirstPeriod;\n    }else if(durationString === 'secondperiod'){\n      return BetDuration.SecondPeriod;\n    }else{\n      return BetDuration.FourthPeriod;\n    }\n    \n  }\n}\n","export default class Game {\n  constructor(odds, leagueName, homeName, awayName, gameId){\n    this.odds = odds;\n    this.leagueName = leagueName;\n    this.homeName = homeName;\n    this.awayName = awayName;\n    this.gameId = gameId;\n  }\n}\n","export default class Odd {\n  constructor(book, type, mlHome, mlAway, mlDraw, spreadHome, spreadAway, totalOver, totalUnder, lineSpread, lineOverUnder, homeOver, homeUnder, homeLine, awayOver, awayUnder, awayLine){\n    this.book = book;\n    this.type = type; //game, first half, second half etc.\n    this.mlHome = mlHome;\n\t  this.mlAway = mlAway;\n\t  this.mlDraw = mlDraw;\n    this.spreadHome = spreadHome;\n\t  this.spreadAway = spreadAway;\n    this.totalOver = totalOver;\n\t\tthis.totalUnder = totalUnder;\n    this.lineSpread = lineSpread; //based on home\n    this.lineOverUnder = lineOverUnder;\n    this.homeOver = homeOver;\n    this.homeUnder = homeUnder;\n    this.homeLine = homeLine;\n    this.awayOver = awayOver;\n    this.awayUnder = awayUnder\n    this.awayLine = awayLine;\n  }\n}\n","import ArbitrageService from '../../../Shared/arbitrage-service';\nimport BookManager from '../book-manager';\nimport Game from '../Models/game';\nimport Odd from '../Models/odd';\n\nexport default class BetOnlineBrain{\n\n  constructor(){\n    this.gameOdds = [];\n  }\n\n  async loadSport(sport){\n    return await ArbitrageService.getBetOnlineOdds(sport).then((r)=>{\n      return r\n    });\n  }\n\n  //scraping data from the api\n  //sends to our brain to combine with other books\n  async getGameTree(){\n    let gameTree = []\n    let sportsToLoad = [\n      this.loadSport('baseball'),\n      this.loadSport('basketball'),\n      this.loadSport('hockey'),\n      this.loadSport('soccer'),\n      this.loadSport('football')\n    ]\n    return await Promise.all(sportsToLoad).then((values) => {\n      values.forEach(v => {\n        v.GameOffering.LeagueGroup.forEach( leagueGroup => {\n          leagueGroup.DateGrouping.forEach( dateGrouping => {\n            dateGrouping.ScheduleGroup.forEach( scheduleGroup => {\n              scheduleGroup.TimeGrouping.forEach( gameTime => {\n                gameTime.Games.forEach( game => {\n                  let g = new Game(\n                    this.getOddsFromGame(game),\n                    leagueGroup.League,\n                    game.HomeTeam,\n                    game.AwayTeam,\n                    this.getGameId(game, dateGrouping.GameDate, leagueGroup.League.toLowerCase())\n                  );\n                  gameTree.push(g);\n                });\n              });\n            });\n          });\n        });\n      });\n      return gameTree;\n    });\n  }\n\n  //get odds from their game\n  getOddsFromGame(game){\n    let odd = new Odd(\n      BookManager.getInstance().getBookById(1001),\n      'game',\n      game.HomeLine.MoneyLine.Line,\n      game.AwayLine.MoneyLine.Line,\n      game.DrawLine.MoneyLine.Line,\n      game.HomeLine.SpreadLine.Line,\n      game.AwayLine.SpreadLine.Line,\n      game.TotalLine.TotalLine.Over.Line,\n      game.TotalLine.TotalLine.Under.Line,\n      game.HomeLine.SpreadLine.Point, //spread based on home\n      game.TotalLine.TotalLine.Point\n    );\n    /* bet-online HomeLine.TeamTotalLine Odds are incorrect coming from this route\n      game.HomeLine.TeamTotalLine.Over.Line,\n      game.HomeLine.TeamTotalLine.Under.Line,\n      game.HomeLine.TeamTotalLine.Point,\n      game.AwayLine.TeamTotalLine.Over.Line,\n      game.AwayLine.TeamTotalLine.Under.Line,\n      game.AwayLine.TeamTotalLine.Point\n    );\n    if(game.HomeTeam == \"Arizona Diamondbacks\"){\n      console.log(\"here:\")\n      console.log(odd)\n      console.log(game);\n    }*/\n    return [odd];\n  }\n\n  //for type 'game' games id will be of format 'game|league|homeName|awayName|YYYYMMDD'\n  getGameId(game, dateString, league){\n    return 'game|'+league+'|'+game.HomeTeam+'|'+game.AwayTeam+'|'+this.getDateString(dateString)\n  }\n\n  getDateString(s){\n    let d = new Date(s);\n    return d.getFullYear().toString()+('0'+(d.getMonth()+1)).slice(-2)+('0'+d.getDate()).slice(-2);\n  }\n}\n","import ArbitrageService from '../../../Shared/arbitrage-service';\nimport BookManager from '../book-manager';\nimport BetFactor from '../Models/v2/BetFactor';\nimport BettingEvent from '../Models/v2/BettingEvent';\nimport Book from '../Models/v2/Book';\nimport BookBet from '../Models/v2/BookBet';\nimport BookEvent from '../Models/v2/BookEvent';\nimport { BetDuration } from '../Models/v2/enum/BetDuration';\nimport { BetFactorTypeEnum } from '../Models/v2/enum/BetFactorTypeEnum';\nimport { BetTypeEnum } from '../Models/v2/enum/BetTypeEnum';\nimport { PlayerPropTypeEnum } from '../Models/v2/enum/PlayerPropTypeEnum';\nimport { SportEnum } from '../Models/v2/enum/SportEnum';\nimport Factor from '../Models/v2/Factor';\nimport Participant from '../Models/v2/Participant';\n\nexport default class PinnacleBrain {\n  matchups:any;\n  markets:any;\n\n  constructor(){\n    this.matchups = [];\n    this.markets = [];\n\n  }\n  async loadSport(sportId:number){\n    let reqs = [\n      ArbitrageService.getPinnacleMarkets(sportId),\n      ArbitrageService.getPinnacleMatchUps(sportId)\n    ]\n    return await Promise.all(reqs).then((values)=>{\n      let matchups = values[1];\n      let markets = values[0];\n      let bookEvents: BookEvent[] = [];\n      let marketArray:any = {};\n\n      markets.forEach( (market:any) => {\n        if(market.matchupId.toString() && Object.keys(marketArray).includes(market.matchupId.toString())){\n          marketArray[market.matchupId.toString()].push(market);\n        }else{\n          marketArray[market.matchupId.toString()] = [market];\n        }\n      })\n\n      matchups.forEach( (matchup:any) => {\n        let homeName = matchup.participants.find((p:any) => p.alignment === 'home').name;\n        let awayName = matchup.participants.find((p:any) => p.alignment === 'away').name;\n        let participants:Participant[] = [];\n        let gameId = this.getGameId(matchup.league.name.toLowerCase(), homeName, awayName, matchup.startTime);\n\n        //order here matters\n        participants.push(new Participant('home', homeName));\n        participants.push(new Participant('away', awayName));\n        \n        if(marketArray[matchup.id] && !matchup.isLive){\n\n          let bettingEvent = new BettingEvent(\n            matchup.league.name.toLowerCase(),\n            this.getSportEnumFromPinnacleSportId(sportId),\n            participants,\n            gameId,\n            new Date(matchup.startTime)\n          );\n\n          bookEvents.push(new BookEvent(\n            this.createOdds(marketArray[matchup.id], gameId, matchup.startTime, participants),\n            bettingEvent\n          ));\n        }\n      });\n      return bookEvents;\n    });\n  }\n\n  async getGameTree(){\n    let allBookEvents:BookEvent[] = [];\n    let sportCalls = [\n      this.loadSport(3),\n      this.loadSport(4)\n    ];\n    return await Promise.all(sportCalls).then( sportTrees => {\n      sportTrees.forEach( st => {\n        Array.prototype.push.apply(allBookEvents, st);\n      });\n      return allBookEvents;\n    })\n  }\n\n  //for type 'game' games id will be of format 'game|league|homeName|awayName|YYYYMMDD'\n  getGameId(league:string, homeName:string, awayName:string, dateString:string){\n    return 'game|'+league+'|'+homeName+'|'+awayName+'|'+this.getDateString(dateString)\n  }\n\n  getDateString(s:string){\n    let d = new Date(s);\n    return d.getFullYear().toString()+('0'+(d.getMonth()+1)).slice(-2)+('0'+d.getDate()).slice(-2);\n  }\n\n  getSportEnumFromPinnacleSportId(sportId: number){\n    if(sportId === 3){\n      return SportEnum.Baseball;\n    }else if(sportId === 4){\n      return SportEnum.Basketball;\n    }else{\n      return SportEnum.Other;\n    }\n  }\n\n  createOdds(markets:any, gameId: string, dateString:string, betParticipants:Participant[]){\n    let bookBets:BookBet[] = [];\n    let book = BookManager.getInstance().getBookById(1003);\n    markets.forEach( (market:any) => {\n      let home = market.prices.find((p:any)=>p.designation === 'home');\n      let away = market.prices.find((p:any)=>p.designation === 'away');\n      let over = market.prices.find((p:any)=>p.designation === 'over');\n      let under = market.prices.find((p:any)=>p.designation === 'under');\n\n      let mlBetFactors: BetFactor[] = [];\n      let sBetFactors: BetFactor[] = [];\n      let ouBetFactors: BetFactor[] = [];\n      let tthBetFactors: BetFactor[] = [];\n      let ttaBetFactors: BetFactor[] = [];\n\n      /*let betParticipants: Participant[] = [];\n\n      market.prices.map((p:any, i:number) => {\n        betParticipants.push(new Participant(i, p.name));\n      })*/\n\n      if(home && away){\n        this.setBetFactor(home.price, mlBetFactors, BetFactorTypeEnum.Home, book);\n        this.setBetFactor(away.price, mlBetFactors, BetFactorTypeEnum.Away, book);\n        //this.setBetFactor('draw', odd, mlBetFactors, BetFactorTypeEnum.Draw, book);\n\n        this.setBetFactor(home.price, sBetFactors, BetFactorTypeEnum.Home, book);\n        this.setBetFactor(away.price, sBetFactors, BetFactorTypeEnum.Away, book);\n      }\n\n      if(over && under){\n        this.setBetFactor(over.price, ouBetFactors, BetFactorTypeEnum.Over, book);\n        this.setBetFactor(under.price, ouBetFactors, BetFactorTypeEnum.Under, book);\n\n        this.setBetFactor(over.price, tthBetFactors, BetFactorTypeEnum.Over, book);\n        this.setBetFactor(under.price, tthBetFactors, BetFactorTypeEnum.Under, book);\n\n        this.setBetFactor(over.price, ttaBetFactors, BetFactorTypeEnum.Over, book);\n        this.setBetFactor(under.price, ttaBetFactors, BetFactorTypeEnum.Under, book);\n      }\n\n      if(market.type === 'moneyline' && mlBetFactors.length > 0){\n        bookBets.push(new BookBet(\n          gameId,\n          BetTypeEnum.MoneyLine,\n          PlayerPropTypeEnum.NonApplicable,\n          market.period,\n          0,\n          mlBetFactors,\n          betParticipants,\n          new Date(dateString),\n          book\n        ))\n      }\n      if(market.type === 'spread'  && sBetFactors.length > 0){\n        bookBets.push(new BookBet(\n          gameId,\n          BetTypeEnum.Spread,\n          PlayerPropTypeEnum.NonApplicable,\n          market.period,\n          home.points,\n          sBetFactors,\n          betParticipants,\n          new Date(dateString),\n          book\n        ));\n      }\n      if(market.type === 'total' && ouBetFactors.length > 0){\n        bookBets.push(new BookBet(\n          gameId,\n          BetTypeEnum.OverUnder,\n          PlayerPropTypeEnum.NonApplicable,\n          market.period,\n          Math.max(over.points, under.points),\n          ouBetFactors,\n          betParticipants,\n          new Date(dateString),\n          book\n        ));\n      }\n      if(market.type === 'team_total' && market.side === 'home'  && tthBetFactors.length > 0){\n        bookBets.push(new BookBet(\n          gameId,\n          BetTypeEnum.TeamTotalHome,\n          PlayerPropTypeEnum.NonApplicable,\n          market.period,\n          Math.max(over.points, under.points),\n          tthBetFactors,\n          betParticipants,\n          new Date(dateString),\n          book\n        ));\n      }\n      if(market.type === 'team_total' && market.side === 'away' && ttaBetFactors.length > 0){\n        bookBets.push(new BookBet(\n          gameId,\n          BetTypeEnum.TeamTotalAway,\n          PlayerPropTypeEnum.NonApplicable,\n          market.period,\n          Math.max(over.points, under.points),\n          ttaBetFactors,\n          betParticipants,\n          new Date(dateString),\n          book\n        ));\n      }\n    });\n    return bookBets;\n  }\n\n  setBetFactor(price:number, bf:BetFactor[], bft:BetFactorTypeEnum, book:Book){\n    if(price){\n      bf.push(new BetFactor(\n        bft,\n        new Factor(this.getDecimialFromAmerican(price), price, book)\n      ));\n    }\n  }\n\n  getDecimialFromAmerican(ml:number){\n\t\tlet f;\n\t\tif(ml > 0){\n\t\t\tf = Math.round((1 + (ml/100))*100)/100;\n\t\t}else{\n\t\t\tf = Math.round((1 + (-100/ml))*100)/100;\n\t\t}\n\t\treturn f;\n\t}\n}\n","import BetChoiceFactors from \"./BetChoiceFactors\";\nimport BetFactor from \"./BetFactor\";\nimport BettingEvent from \"./BettingEvent\";\nimport BookBet from \"./BookBet\";\nimport BookEvent from \"./BookEvent\";\nimport { BetFactorTypeEnum } from \"./enum/BetFactorTypeEnum\";\nimport { SportEnum } from \"./enum/SportEnum\";\nimport Participant from \"./Participant\";\nimport FactorTypeSummary from \"./FactorTypeSummary\";\nimport { BetTypeEnum } from \"./enum/BetTypeEnum\";\nimport { PlayerPropTypeEnum } from \"./enum/PlayerPropTypeEnum\";\nimport { BetDuration } from \"./enum/BetDuration\";\n\nexport default class BetChoice{\n    BettingEvent: BettingEvent;\n    BetChoiceId:string;\n    BetParticipants: Participant[];\n    BetType: BetTypeEnum;\n    PlayerPropType: PlayerPropTypeEnum;\n    BetDuration: BetDuration;\n    Line: number;\n\n    Choices: BetChoiceFactors[];\n    PinnacleOdds?: BetFactor[];\n    RealOdds?: FactorTypeSummary[];\n    Evs?: FactorTypeSummary[];\n    HouseLine?: number;\n    BestEV?: number;\n\n    constructor(bettingEvent: BettingEvent, betChoiceId:string, betParticipants: Participant[], betType: BetTypeEnum, playerPropType: PlayerPropTypeEnum, betDuration: BetDuration, line: number){\n        this.BettingEvent = bettingEvent;\n        this.BetChoiceId = betChoiceId;\n        this.BetParticipants = betParticipants;\n        this.BetType = betType;\n        this.PlayerPropType = playerPropType;\n        this.BetDuration = betDuration;\n        this.Line = line;\n        \n        this.Choices = [];\n    }\n}","import BetFactor from \"./BetFactor\";\nimport { BetFactorTypeEnum } from \"./enum/BetFactorTypeEnum\";\nimport Factor from \"./Factor\";\n\n\nexport default class BetChoiceFactors{\n    public Label: BetFactorTypeEnum;\n    public Factors: Factor[];\n\n    constructor(label:BetFactorTypeEnum, factors:Factor[]){\n        this.Label = label;\n        this.Factors = factors;\n    }\n}","import { BetFactorTypeEnum } from './enum/BetFactorTypeEnum'\n\nexport default class FactorTypeSummary{\n    PickLabel: BetFactorTypeEnum;\n    Value: number;\n\n    constructor(pickLabel: BetFactorTypeEnum, value:number){\n        this.PickLabel = pickLabel;\n        this.Value = value;\n    }\n}","import ActionNetworkBrain from './action-network-brain-v2';\nimport BetOnlineBrain from './BookBrains/bet-online-brain';\nimport PinnacleBrain from './BookBrains/pinnacle-brain';\nimport BetChoice from './Models/v2/BetChoice'\nimport BookEvent from './Models/v2/BookEvent';\nimport BettingEvent from './Models/v2/BettingEvent';\nimport BookBet from './Models/v2/BookBet';\nimport BetFactor from './Models/v2/BetFactor';\nimport BetChoiceFactors from './Models/v2/BetChoiceFactors';\nimport Factor from './Models/v2/Factor';\nimport FactorTypeSummary from './Models/v2/FactorTypeSummary';\n\nclass BetChoiceManager {\n  private static Instance?: BetChoiceManager;\n  AllBets: BetChoice[];\n  AllEvents: BettingEvent[];\n  ActionNetworkBrain: ActionNetworkBrain;\n  BetOnlineBrain: BetOnlineBrain;\n  PinnacleBrain: PinnacleBrain;\n\n  private constructor(){\n    this.AllBets = [];\n    this.AllEvents = [];\n    this.ActionNetworkBrain = new ActionNetworkBrain();\n    this.BetOnlineBrain = new BetOnlineBrain();\n    this.PinnacleBrain = new PinnacleBrain();\n  }\n\n  private static createInstance() {\n    var object = new BetChoiceManager();\n    return object;\n  }\n\n  public static getInstance() {\n    if (!this.Instance) {\n      this.Instance = this.createInstance();\n    }\n    return this.Instance;\n}\n\n  async loadActionNetworkGameTree(){\n    \n    return await this.ActionNetworkBrain.getGameTree().then( gameTree => {\n      return gameTree;\n    });\n  }\n\n  async loadBetOnlineGameTree(){\n    \n    return await this.BetOnlineBrain.getGameTree().then( gameTree => {\n      return gameTree;\n    });\n  }\n\n  async loadPinnacleGameTree(){\n    \n    return await this.PinnacleBrain.getGameTree().then( gameTree => {\n      return gameTree;\n    });\n  }\n\n  async loadBetChoices(){\n    this.AllEvents = [];\n    this.AllBets = [];\n    let bookGameTrees = [\n      this.loadActionNetworkGameTree(),\n      //this.loadBetOnlineGameTree(),\n      this.loadPinnacleGameTree()\n    ]\n    return await Promise.all(bookGameTrees).then( trees => {\n      console.log(trees);\n      trees.forEach( (tree:BookEvent[]) => {\n        tree.forEach( (bookEvent:BookEvent) => {\n          if(bookEvent.BookBets){\n            bookEvent.BookBets.forEach((bookBet:BookBet) => {\n              this.loadChoicesForBetChoice(bookBet, bookEvent);\n              if(bookBet.Book.BookId === 1003){\n                this.loadPinnacleOddsForBetChoice(bookBet, bookEvent);\n              }\n            });\n          }\n        });\n      });\n      this.calculateBetChoices();\n    });\n  }\n\n  loadChoicesForBetChoice(bookBet: BookBet, bookEvent: BookEvent){\n    let existingBetChoice = this.AllBets.find(b => b.BetChoiceId === bookBet.JoinLabel);\n    if(existingBetChoice !== undefined){\n      bookBet.BetFactors.forEach(bf => {\n        let bcf = existingBetChoice?.Choices.find(c => c.Label === bf.Label);\n        if(bcf !== undefined){\n          bcf.Factors.push(bf.Factor);\n        }else{\n          existingBetChoice?.Choices.push(new BetChoiceFactors(\n            bf.Label,\n            [bf.Factor]\n          ))\n        }\n      })\n    } else {\n      let newBetChoice = new BetChoice(\n        bookEvent.BettingEvent, bookBet.JoinLabel, bookBet.BetParticipants, bookBet.BetType, bookBet.PlayerPropType, bookBet.BetDuration, bookBet.Line\n      );\n      bookBet.BetFactors.forEach(bf => {\n        newBetChoice.Choices.push(new BetChoiceFactors(\n          bf.Label,\n          [bf.Factor]\n        ))\n      })\n      this.AllBets.push(newBetChoice);\n    }\n  }\n\n  loadPinnacleOddsForBetChoice(bookBet: BookBet, bookEvent: BookEvent){\n    let existingBetChoice = this.AllBets.find(b => b.BetChoiceId === bookBet.JoinLabel);\n    if(existingBetChoice === undefined){\n      let newBetChoice = new BetChoice(\n        bookEvent.BettingEvent, bookBet.JoinLabel, bookBet.BetParticipants, bookBet.BetType, bookBet.PlayerPropType, bookBet.BetDuration, bookBet.Line\n      );\n      newBetChoice.PinnacleOdds = bookBet.BetFactors;\n      this.AllBets.push(newBetChoice);\n    }else{\n      existingBetChoice.PinnacleOdds = bookBet.BetFactors;\n    }\n  }\n\n  calculateBetChoices(){\n    this.AllBets.forEach(betChoice => {\n      this.calculateBetChoiceInfo(betChoice);\n    });\n\t}\n\n  calculateBetChoiceInfo(betChoice: BetChoice){\n    betChoice.Choices.forEach((bcf: BetChoiceFactors) => {\n      bcf.Factors.sort((a,b)=>{return b.DecimalOdds-a.DecimalOdds});\n      bcf.Factors[0].Best = true;\n      if(betChoice.HouseLine){\n        betChoice.HouseLine += 1/bcf.Factors[0].DecimalOdds;\n      }else{\n        betChoice.HouseLine = 1/bcf.Factors[0].DecimalOdds;\n      }\n      \n    })\n\n    this.calculateRealOdds(betChoice);\n    this.calculateEVs(betChoice);\n  }\n\n  calculateRealOdds(betChoice: BetChoice){\n    let pTotal = 0;\n\n    if(betChoice.PinnacleOdds){\n      betChoice.PinnacleOdds.forEach(bf => {\n        pTotal += 1/bf.Factor.DecimalOdds;\n      })\n  \n      if(pTotal){\n        if(pTotal < 0.5){\n          console.log(betChoice);\n        }\n        betChoice.PinnacleOdds.forEach(bf => {\n          if(betChoice.RealOdds){\n            betChoice.RealOdds.push(new FactorTypeSummary(bf.Label, (1/bf.Factor.DecimalOdds) / pTotal))\n          }else {\n            betChoice.RealOdds = [new FactorTypeSummary(bf.Label, (1/bf.Factor.DecimalOdds) / pTotal)]\n          }\n          \n        })\n      }\n    }\n    \n  }\n\n  \n\n  calculateEVs(betChoice: BetChoice){\n    if(betChoice.RealOdds){\n      betChoice.Choices.forEach(c => {\n        let bestCEV: number;\n        c.Factors.forEach(f => {\n          let realP = betChoice.RealOdds?.find(o => o.PickLabel === c.Label)?.Value;\n          if(realP){\n            f.EV = Math.round((f.DecimalOdds * realP - 1)*100 / 2 * 100) / 100;\n            if(betChoice.BestEV=== undefined){\n              betChoice.BestEV = f.EV;\n            }else if (f.EV > betChoice.BestEV){\n              betChoice.BestEV = f.EV;\n            }\n            if(bestCEV === undefined){\n              bestCEV = f.EV;\n            }else if(f.EV > bestCEV){\n              bestCEV = f.EV;\n            }\n            let existingEV = betChoice.Evs?.find(fs => fs.PickLabel === c.Label)\n            if(betChoice.Evs && existingEV === undefined){\n              betChoice.Evs.push(new FactorTypeSummary(c.Label, bestCEV));\n            }else if(betChoice.Evs === undefined){\n              betChoice.Evs = [new FactorTypeSummary(c.Label, bestCEV)];\n            }\n            \n          }\n  \n        })\n      })\n    }\n    \n  }\n\n  \n\n  getGameOddsSortedBy(sort: string){\n    if(sort === 'ev'){\n      return this.AllBets.filter(g => g.BestEV).sort(this.mySort);\n    }\n    if(sort === 'arb'){\n      return this.AllBets.sort(this.mySort2);\n    }\n  }\n\n  mySort(a:BetChoice,b:BetChoice){\n    return (b.BestEV ?  b.BestEV : -100 ) - (a.BestEV ? a.BestEV : -100)\n  }\n\n  mySort2(a:BetChoice,b:BetChoice){\n    return (a.HouseLine ? a.HouseLine : 100) - (b.HouseLine ? b.HouseLine : 100);\n  }\n}\n\nexport default BetChoiceManager;\n","import React, { Component } from 'react';\nimport logo from '../logo.svg';\nimport PageBlock from '../components/page-block';\nimport ArbitrageService from '../Shared/arbitrage-service';\nimport GameCard from '../Functions/GameCard/gamecard';\nimport BasicPopover from '../Functions/PopOver/popover';\n\nimport TextField from '@mui/material/TextField';\nimport { Grid, Typography, Paper, Button, FormControl, Switch } from '@mui/material';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport { styled } from '@mui/material/styles';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\n\nimport BetOnlineBrain from '../ClientBrain/Arbitrage/BookBrains/bet-online-brain';\nimport ActionNetworkBrain from '../ClientBrain/Arbitrage/action-network-brain-v2';\nimport BookManager from '../ClientBrain/Arbitrage/book-manager';\nimport BetChoice from '../ClientBrain/Arbitrage/Models/v2/BetChoice';\nimport Book from '../ClientBrain/Arbitrage/Models/v2/Book';\nimport BetChoiceManager from '../ClientBrain/Arbitrage/BetChoiceManager';\nimport { BetTypeEnum } from '../ClientBrain/Arbitrage/Models/v2/enum/BetTypeEnum';\n\nconst Item = styled(Paper)(({ theme }: any) => {\n\treturn({\n  backgroundColor: theme.palette.dark.three,\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: 'white',\n  height: '25px',\n\tfontWeight: 'bold',\n\talignItems: \"center\",\n\tjustifyContent: \"center\",\n\tdisplay:\"flex\"\n});});\n\ntype Props = {\n\n}\n\ntype State = {\n\ttitle: string,\n\tallBets: BetChoice[],\n\tdisplayBets: BetChoice[],\n\tbetTypeFilter: BetTypeEnum,\n\tleagueFilter: string,\n\tsortBy: string,\n\tmyBooks: Book[],\n\tleagueOptions: string[]\n}\n\nclass ArbitragePage extends Component<Props, State>{\n\tstate: State = {\n\t\ttitle: 'Arbitrage',\n\t\tallBets: [],\n\t\tdisplayBets: [],\n\t\tbetTypeFilter: BetTypeEnum.All,\n\t\tleagueFilter: 'all',\n\t\tsortBy: 'ev',\n\t\tmyBooks: [],\n\t\tleagueOptions: []\n\t};\n\n\tactionNetWorkBrain: ActionNetworkBrain;\n\tbookManager: BookManager;\n\tbetChoiceManager: BetChoiceManager;\n\n\n\tconstructor(props: Props){\n\t\tsuper(props);\n\n\t\tthis.actionNetWorkBrain = new ActionNetworkBrain();\n\t\tthis.bookManager = BookManager.getInstance();\n\t\tthis.betChoiceManager = BetChoiceManager.getInstance();\n\t\tthis.setBetTypeFilter = this.setBetTypeFilter.bind(this);\n\t\tthis.updateSortBy = this.updateSortBy.bind(this);\n\t\tthis.populateGameOdds = this.populateGameOdds.bind(this);\n\t\tthis.setLeagueFilter = this.setLeagueFilter.bind(this);\n\t\tthis.updateBooks = this.updateBooks.bind(this);\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.bookManager.loadBooks().then(()=>{\n\t\t\tthis.setState({myBooks: this.bookManager.getSelectedBooks()})\n\t\t\tthis.populateGameOdds().then(() => {\n\t\t\t\tthis.populateLeagueOptions();\n\t\t\t});\n\t\t});\n\t}\n\n\tpopulateLeagueOptions(){\n\t\tlet lo = this.state.allBets.map( o => o.BettingEvent.LeagueName ).filter((value, index, self) => {\n\t\t\treturn self.indexOf(value) === index;\n\t\t});\n\t\tthis.setState({leagueOptions: lo});\n\t}\n\n\tsetBetTypeFilter(e: any){\n\t\tlet btf = e.target.value;\n\t\tif(e && btf !== undefined){\n\t\t\tthis.setState({betTypeFilter: btf});\n\t\t\tthis.populateGameOdds();\n\t\t}\n\t}\n\n\tsetLeagueFilter(e: any){\n\t\tlet lf = e.target.value;\n\t\tif(e && lf){\n\t\t\tthis.setState({leagueFilter: lf});\n\t\t\tthis.populateGameOdds();\n\t\t}\n\t}\n\n\tupdateSortBy(e: any){\n\t\tlet sb = e.target.value;\n\t\tif(e && sb){\n\t\t\tlet allBets = this.betChoiceManager.getGameOddsSortedBy(sb);\n\t\t\tif(allBets !== undefined){\n\t\t\t\tthis.setState({sortBy: sb, allBets: allBets, displayBets: this.getDisplayBets(allBets)});\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateBooks(e: any){\n\t\tlet bookId = parseInt(e.target.value,10);\n\t\tthis.bookManager.updateBookById(bookId);\n\t\tthis.setState({myBooks: this.bookManager.selectedBooks});\n\t\tthis.populateGameOdds();\n\t\tArbitrageService.updateMyBooks(this.bookManager.getSelectedBookIds());\n\t}\n\n\tasync populateGameOdds(){\n\t\treturn await this.betChoiceManager.loadBetChoices().then(() => {\n\t\t\tlet allBets = this.betChoiceManager.getGameOddsSortedBy(this.state.sortBy);\n\t\t\tif(allBets !== undefined){\n\t\t\t\t\n\t\t\t\tthis.setState({\n\t\t\t\t\tallBets: allBets,\n\t\t\t\t\tdisplayBets: this.getDisplayBets(allBets)\n\t\t\t\t});\n\t\t\t}\n\t\t\tconsole.log(this.state.displayBets);\n\t\t});\n\t}\n\n\tgetDisplayBets(allBets: BetChoice[]){\n\t\treturn allBets.filter( (o, i) => {\n\t\t\t//betType Filter\n\t\t\tif(this.state.betTypeFilter !== BetTypeEnum.All && this.state.betTypeFilter !== o.BetType){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t//setLeagueFilter\n\t\t\tif(this.state.leagueFilter !== 'all' && this.state.leagueFilter !== o.BettingEvent.LeagueName){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn i < 20;\n\t\t});\n\t}\n\n\trender(){\n\t\t//const {classes} = this.props;\n\t\treturn(\n\t\t\t<div className=\"arbitrage\">\n\t\t\t\t<div className=\"arbitrage-body\">\n\t\t\t\t\t<PageBlock fill=\"dark\">\n\t\t\t\t\t\t<div><h2>{this.state.title}</h2></div>\n\t\t\t\t\t\t<Grid container spacing={2} justifyContent=\"left\" alignItems=\"center\">\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t\t\t\t\t<InputLabel id=\"sort-by-label\">Sort By</InputLabel>\n\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\tlabelId=\"sort-by-label\"\n\t\t\t\t\t\t\t\t\t\tid=\"sort\"\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.sortBy}\n\t\t\t\t\t\t\t\t\t\tlabel=\" Sort By \"\n\t\t\t\t\t\t\t\t\t\tonChange={this.updateSortBy}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={'ev'}>+EV</MenuItem>\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={'arb'}>ARB</MenuItem>\n\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={2}>\n\t\t\t\t\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t\t\t\t\t<InputLabel id=\"bt-label\">Bet Type</InputLabel>\n\t\t\t\t\t        <Select\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t          labelId=\"bt-label\"\n\t\t\t\t\t          id=\"betTypeFilter\"\n\t\t\t\t\t          value={this.state.betTypeFilter}\n\t\t\t\t\t          label=\" Bet Type \"\n\t\t\t\t\t          onChange={this.setBetTypeFilter}\n\t\t\t\t\t        >\n\t\t\t\t\t          \t<MenuItem value={BetTypeEnum.All}>ALL</MenuItem>\n\t\t\t\t\t        \t<MenuItem value={BetTypeEnum.MoneyLine}>Money Line</MenuItem>\n\t\t\t\t\t        \t<MenuItem value={BetTypeEnum.Spread}>Spread</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem value={BetTypeEnum.OverUnder}>Over Under</MenuItem>\n\t\t\t\t\t        \t<MenuItem value={BetTypeEnum.TeamTotal}>Team Over Under</MenuItem>\n\t\t\t\t\t        </Select>\n\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={2}>\n\t\t\t\t\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t\t\t\t\t<InputLabel id=\"league-label\">League</InputLabel>\n\t\t\t\t\t        <Select\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t          labelId=\"league-label\"\n\t\t\t\t\t          id=\"leagueFilter\"\n\t\t\t\t\t          value={this.state.leagueFilter}\n\t\t\t\t\t          label=\" League \"\n\t\t\t\t\t          onChange={this.setLeagueFilter}\n\t\t\t\t\t        >\n\t\t\t\t\t\t\t\t<MenuItem value={'all'}>ALL</MenuItem>\n\t\t\t\t\t\t\t\t{this.state.leagueOptions.map( (lo, i) => {\n\t\t\t\t\t\t\t\t\treturn <MenuItem value={lo} key={i}>{lo}</MenuItem>\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t        </Select>\n\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<BasicPopover updateBooks={this.updateBooks} myBooks={this.state.myBooks}></BasicPopover>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Button variant=\"contained\" onClick={this.populateGameOdds}>Refresh</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid container spacing={1} sx={{mt:2}}>\n\t\t\t\t\t\t\t<Grid item xs={2.5}>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={1.5}>\n\t\t\t\t\t\t\t\t<Item>Line</Item>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={1}>\n\t\t\t\t\t\t\t\t<Item>Arb</Item>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={1}>\n\t\t\t\t\t\t\t\t<Item>EV</Item>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={1}>\n\t\t\t\t\t\t\t\t<Item>Pick</Item>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t{this.state.myBooks.map((b) => {\n\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t<Grid item xs key={'header-'+b.BookId}>\n\t\t\t\t\t\t\t\t\t<Item>\n\t\t\t\t\t\t\t\t\t{b.BookLogo ? <img style={{maxWidth:\"100%\", maxHeight:\"100%\"}}src={b.BookLogo}/> :\n\t\t\t\t\t\t\t\t\t\t<Typography>{b.BookName}</Typography>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</Item>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{this.state.displayBets.length > 0 &&\n\t\t\t\t\t\t\t<div style={{width:'100%'}}>\n\t\t\t\t\t\t\t{this.state.displayBets.map((bet,i)=>{\n\t\t\t\t\t\t\t\tif(i<100 && bet.HouseLine){\n\t\t\t\t\t\t\t\t\treturn(<GameCard betChoice={bet} key={i} myBooks={this.state.myBooks}/>)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t</PageBlock>\n\t\t\t\t\t<PageBlock fill=\"light\">\n\t\t\t\t\t\t<h2>... more arbitrage stuff</h2>\n\t\t\t\t\t</PageBlock>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t)\n\t}\n}\n\nexport default ArbitragePage;\n","import { createBrowserHistory } from 'history';\nexport default createBrowserHistory();\n","import React, { Component } from 'react';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Loading from './loading'\nimport history from '../Shared/browser-history';\nimport AuthService from '../Shared/auth-service';\n\ntype Props = {\n  app?: any,\n  user?: any\n}\n\nexport default function Callback(props: Props) {\n  const { isLoading, user, isAuthenticated } = useAuth0();\n  if(!isLoading){\n    return <LoginCallbackPage user={user} app={props.app}/>\n  }\n  return <Loading />\n};\n\nclass LoginCallbackPage extends Component<Props>{\n\n  componentDidMount(){\n    if(this.props.user){\n      AuthService.userContextGet(this.props.user.sub).then(r => {\n        this.props.app.cacheUser(r);\n        history.push('/app');\n      }).catch(() =>{\n        history.push('/app');\n      });\n    }else{\n      history.push('/app');\n    }\n  }\n\n\trender(){\n\t\treturn(\n\t\t\t<Loading />\n\t\t)\n\t}\n}\n","import React, { Component } from 'react';\nimport ButtonAppBar from './Functions/AppBar/app-bar';\nimport { Route } from 'react-router-dom';\n\n//Auth\nimport PrivateRoute from './Auth/private-route';\n\n//Pages\nimport Home from './Pages/home';\nimport MyProfile from './Pages/my-profile';\nimport Admin from './Pages/admin';\nimport Arbitrage from './Pages/arbitrage';\nimport Callback from './Pages/login-callback'\n\n//Models\nimport Book from './ClientBrain/Arbitrage/Models/v2/Book'\nimport { propsToClassKey } from '@mui/styles';\n\ntype Props = {\n  history: any\n}\n\ntype State = {\n  usercontext: any\n}\n\ntype Role = {\n  description: string,\n  id: string,\n  name:string\n}\n\nclass App extends React.Component<Props, State>{\n  public state : State = {usercontext : App.user()}\n\n  constructor(props: Props){\n    super(props);\n  }\n\n  static user(){\n    return window.sessionStorage.user_context ? JSON.parse(window.sessionStorage.user_context) : null;\n  }\n\n  static cacheMyBooks(myBooks: number[]){\n    let u = JSON.parse(window.sessionStorage.user_context);\n    if(!u.user_metadata.arbitrage){\n      u.user_metadata.arbitrage = {};\n    }\n    u.user_metadata.arbitrage.myBooks = myBooks;\n    window.sessionStorage.setItem('user_context', JSON.stringify(u));\n  }\n\n  static userHasRoleFromCache(role: string){\n    if(App.user() && App.user().roles){\n      return App.user().roles.filter( (r:any) => r.name === role).length > 0;\n    }else{\n      return false;\n    }\n  }\n\n  getUser(){\n    return this.state.usercontext;\n  }\n\n  clearUserCache(){\n    window.sessionStorage.clear();\n    this.setState({usercontext: null})\n  }\n\n  cacheUser(u: any){\n    window.sessionStorage.setItem('user_context', JSON.stringify(u));\n    this.setState({usercontext: App.user()})\n  }\n\n  updateMyRoles(roles: Role[]){\n    let u = this.state.usercontext;\n    u.roles = roles;\n    this.cacheUser(u);\n  }\n\n  userHasRole(role: string){\n    if(this.state.usercontext && this.state.usercontext.roles){\n      return this.state.usercontext.roles.filter( (r:Role) => r.name === role).length > 0;\n    }else{\n      return false;\n    }\n  }\n\n  render(){\n    return (\n      <div className={\"App-header\"}>\n        <ButtonAppBar history={this.props.history} app={this}></ButtonAppBar>\n        <div style={{ marginTop: 64}}>\n          <Route path=\"/app/profile\"><PrivateRoute component={MyProfile} userAccess='profile'></PrivateRoute></Route>\n          <Route path=\"/app/admin\"><PrivateRoute component={Admin} userAccess='admin' app={this}></PrivateRoute></Route>\n          <Route path=\"/app/arbitrage\"><PrivateRoute component={Arbitrage} userAccess='arbitrage' app={this}></PrivateRoute></Route>\n          <Route exact path=\"/callback\"><Callback app={this}/></Route>\n          <Route exact path=\"/app\" component={Home} />\n          <Route exact path=\"/\" component={Callback} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","//import { createTheme } from '@material-ui/core/styles';\nimport { createTheme } from '@mui/material/styles'\nimport { darken } from '@material-ui/core/styles';\nconst main = '#4466ff'\n\ndeclare module '@mui/material/styles' {\n  interface PaletteOptions {    \n      dark?: any,\n      light?: any,\n      typography?: any\n  }\n}\n\ndeclare module '@mui/material/styles' {\n  interface Palette {    \n      dark?: any,\n      light?: any,\n      typography?: any\n  }\n}\n\nconst theme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: main\n    },\n    secondary: {\n      light: '#FF7060',\n      main: '#cc9944'\n    },\n    dark: {\n      one: '#101010',\n      two: '#151515',\n      three: '#202020',\n      four: darken(main, 0.7),\n      five: darken(main, 0.5)\n    },\n    light: '#f2f2f2',\n    typography: {\n      h6: {\n        color: '#FFFFFF'\n      }\n    },\n    text: {\n      primary: '#ffffff'\n    }\n  },\n  components: {\n    // Name of the component\n\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from '@mui/material/styles'\nimport { Router } from 'react-router-dom';\nimport App from './App';\n\n//Auth\nimport { Auth0Provider } from \"@auth0/auth0-react\";\nimport config from \"./Auth/auth0-keys.json\";\n\n//Shared\nimport history from './Shared/browser-history';\nimport theme from './Shared/theme';\n\nconst routing = (\n\n    <Auth0Provider\n      domain={config.domain}\n      clientId={config.clientId}\n      redirectUri={window.location.origin+'/callback'}\n    >\n      <ThemeProvider theme={theme}>\n        <Router history={history}>\n          <App history={history}/>\n        </Router>\n      </ThemeProvider>\n    </Auth0Provider>\n\n)\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}